{"version":3,"sources":["constants/endPoint.js","reducers/player.reducer.js","constants/ActionTypes.js","reducers/host.reducer.js","reducers/register.reducer.js","reducers/login.reducer.js","reducers/index.js","actions/actionPlayer.js","components/player/Answer.js","components/player/Questions.js","components/player/Img.js","components/player/EnterPin.js","components/player/Waiting.js","components/player/Player.js","components/host/PlayGame.js","actions/actionHost.js","components/host/PreparePlayGame.js","components/host/Game.js","components/notfound/NotFound.js","components/accounts/Google.js","components/accounts/Facebook.js","components/accounts/Login.js","actions/actionLogin.js","components/accounts/Register.js","actions/actionRegister.js","components/home/Home.js","App.js","serviceWorker.js","index.js","components/host/backgroundaudio.mp3"],"names":["url","endPoint","endPointDataQuestion","urlLogin","urlRegister","urlVerifyToken","urlAuthGoogle","urlAuthFacebook","initState","socket","questions","numberCurrentQuestion","score","start","members","nickName","pin","arrRoom","isJoinRoom","disableAnswer","time","answersColor","answersBackgroundColor","myReducer","state","action","type","options","rememberUpgrade","transports","secure","rejectUnauthorized","openSocket","emit","push","newMember","timeAnswer","rightAnswers","split","forEach","rightAnswer","parseInt","Math","floor","random","startPlay","numberMembersAnswer","membersBeforeTimeOut","account","userName","fullName","email","passWord","confirmPassword","combineReducers","player","host","login","register","setTimeQuestion","Answer","onClick","index","props","clickAnswer","right","this","answers","map","answer","key","disabled","className","Component","connect","dispatch","actions","Questions","timeCountDown","idTimer","t","setInterval","clearInterval","question","sec","Img","EnterPin","document","getElementById","value","clickSubmitPin","onSubmit","e","preventDefault","method","id","placeholder","Waiting","role","Player","componentDidMount","connectSocketIoPlayer","on","data","is_join_room","alert","saveNewMember","isPlay","loadQuestions","loadQuestion","show","numberQuestion","PlayGame","clickNextQuestion","length","memberAnswer","isRight","findIndex","m","rightQuestion","sort","a","b","numberMembers","showMembersAfterTimeOut","member","i","scope","showMembersBeforeTimeOut","aria-hidden","PreparePlayGame","getQuestions","token","localStorage","getItem","axios","get","headers","clickStartGame","leaveRoom","connectSocketIoHost","splice","memberExit","numberMember","showMembers","controls","loop","autoPlay","src","music","playStart","Game","checkToken","post","removeItem","history","window","location","reload","to","withRouter","NotFound","Google","googleResponse","response","user","profileObj","googleId","name","tokenId","then","res","setItem","onFailure","error","console","log","clientId","onSuccess","Facebook","facebookResponse","accessToken","cssClass","appId","autoLoad","fields","callback","Login","onchange","target","onChange","onclick","failLogin","JSON","stringify","alt","autoFocus","htmlFor","replace","Register","accountInvalid","acc","Home","sigOut","jwtDecode","data-toggle","aria-expanded","aria-labelledby","App","path","exact","Boolean","hostname","match","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"wQAAMA,EAAG,wBACIC,EAAWD,EACXE,EAAoB,UAAMF,EAAN,kBACpBG,EAAQ,UAAMH,EAAN,sBACRI,EAAW,UAAMJ,EAAN,yBACXK,EAAc,UAAML,EAAN,uBACdM,EAAa,UAAMN,EAAN,4BACbO,EAAe,UAAMP,EAAN,8B,iBCHxBQ,EAAY,CACdC,OAAQ,KACRC,UAAW,KACXC,sBAAuB,EACvBC,MAAO,EACPC,OAAO,EACPC,QAAS,GACTC,SAAU,GACVC,IAAK,GACLC,QAAS,GACTC,YAAY,EACZC,eAAe,EACfC,KAAM,EACNC,aAAc,CAAC,GAAI,GAAI,GAAI,IAC3BC,uBAAwB,CAAC,GAAI,GAAI,GAAI,KA4ExBC,EAzEC,WAAgC,IAA/BC,EAA8B,uDAAtBhB,EAAWiB,EAAW,uCAC7C,OAAQA,EAAOC,MACb,ICtBkC,2BDuBhC,IAAMC,EAAU,CACdC,iBAAiB,EACjBC,WAAY,CAAC,aACbC,QAAQ,EACRC,oBAAoB,GAEhBtB,EAASuB,IAAW/B,EAAU0B,GAGpC,OADAH,EAAMf,OAASA,EACR,eAAKe,GAGd,IClC4B,mBDsC1B,OAHAA,EAAMf,OAAOwB,KAAK,YAAaR,EAAOT,KACtCQ,EAAMR,IAAMS,EAAOT,IACnBQ,EAAMT,SAAWU,EAAOV,SACjB,eAAKS,GAEd,ICvCwB,eDyCtB,OADAA,EAAMN,WAAaO,EAAOP,WACnB,eAAKM,GAEd,ICrCkC,yBDuChC,OADAA,EAAMV,QAAQoB,KAAKT,EAAOU,WACnB,eAAKX,GAGd,IC/CmB,UDiDjB,OADAA,EAAMX,MAAQY,EAAOZ,MACd,eAAKW,GAEd,IClD0B,iBDoDxB,OADAA,EAAMd,UAAYe,EAAOf,UAClB,eAAKc,GAEd,ICrDyB,gBD4DvB,OANAA,EAAML,eAAgB,EACtBK,EAAMH,aAAe,CAAC,GAAI,GAAI,GAAI,IAClCG,EAAMF,uBAAyB,CAAC,GAAI,GAAI,GAAI,IAC5CE,EAAMb,sBAAwBc,EAAOd,sBACjCa,EAAMd,YACRc,EAAMJ,KAAOI,EAAMd,UAAUc,EAAMb,uBAAuByB,YACrD,eAAKZ,GAEd,IC7DwB,eDgEtB,OAFAA,EAAML,cAAgBM,EAAON,cAC7BK,EAAMH,aAAeI,EAAOJ,aACrB,eAAKG,GAEd,ICjEoC,2BDoElC,GAFAA,EAAMJ,KAAOK,EAAOL,KAED,IAAfI,EAAMJ,KAAY,CACpB,IAAIiB,EAAeb,EAAMd,UACvBc,EAAMb,uBACN0B,aAAaC,MAAM,KACrBD,EAAaE,SAAQ,SAACC,GACpBhB,EAAMF,uBAAuBmB,SAASD,GAAe,GACnD,gBAEJhB,EAAML,eAAgB,EAExB,OAAO,eAAKK,GAGd,QACE,OAAOA,I,QEtFThB,EAAY,CACdC,OAAQ,KACRO,IAAK0B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAsB,EAC3CC,WAAW,EACXnC,UAAW,GACXoC,oBAAqB,EACrBhC,QAAS,GACTiC,qBAAsB,GACtBpC,sBAAuB,EACvBS,KAAM,EACNE,uBAAwB,CAAC,GAAI,GAAI,GAAI,KAsExBC,EApEC,WAAgC,IAA/BC,EAA8B,uDAAtBhB,EAAWiB,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IDPgC,yBCQ9B,IAAMC,EAAU,CACdC,iBAAiB,EACjBC,WAAY,CAAC,aACbC,QAAQ,EACRC,oBAAoB,GAEhBtB,EAASuB,IAAW/B,EAAU0B,GAEpC,OADAH,EAAMf,OAASA,EACR,eAAKe,GAEd,IDhB2B,kBCkBzB,OADAA,EAAMV,QAAQoB,KAAKT,EAAOU,WACnB,eAAKX,GAEd,IDnBkC,yBCqBhC,OADAA,EAAMuB,qBAAuBtB,EAAOsB,qBAC7B,eAAKvB,GAEd,IDtB4B,mBCwB1B,OADAA,EAAMqB,UAAYpB,EAAOoB,UAClB,eAAKrB,GAGd,ID9BsB,eCgCpB,OADAA,EAAMd,UAAN,YAAsBe,EAAOf,WACtB,eAAKc,GAGd,ID/B+B,sBCqC7B,OALAA,EAAMf,OAAOwB,KAAK,OAAQ,GAC1BT,EAAMb,uBAAyB,EAC/Ba,EAAMF,uBAAyB,CAAC,GAAI,GAAI,GAAI,IAC5CE,EAAMJ,KAAOI,EAAMd,UAAUc,EAAMb,uBAAuByB,WAC1DZ,EAAMsB,oBAAsB,EACrB,eAAKtB,GAGd,IDvCuB,cCyCrB,OADAA,EAAMV,QAAUW,EAAOX,QAChB,eAAKU,GAGd,ID3CyB,gBC8CvB,OAFAA,EAAMsB,qBAAuB,EAC7BtB,EAAMV,QAAUW,EAAOX,QAChB,eAAKU,GAEd,ID/CkC,yBCiDhC,GADAA,EAAMJ,KAAOK,EAAOL,KACD,IAAfI,EAAMJ,KAAY,CACpB,IAAIiB,EACFb,EAAMd,UAAUc,EAAMb,uBAAuB0B,aAAaC,MAAM,KAClED,EAAaE,SAAQ,SAACC,GACpBhB,EAAMF,uBAAuBmB,SAASD,GAAe,GACnD,gBAGN,OAAO,eAAKhB,GAGd,QACE,OAAO,eAAKA,KC9EdhB,EAAY,CACZwC,QAAQ,CACNC,SAAS,KACTC,SAAS,KACTC,MAAM,KACNC,SAAS,KACTC,gBAAgB,OAeP9B,EAXC,WAAgC,IAA/BC,EAA8B,uDAAtBhB,EAAWiB,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IFS8B,qBEP5B,OADAF,EAAMwB,QAAQvB,EAAOuB,QACd,eAAKxB,GAEd,QACE,OAAOA,ICjBThB,EAAY,CACZwC,QAAQ,MAcGzB,EAXC,WAAgC,IAA/BC,EAA8B,uDAAtBhB,EAAWiB,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IHa2B,kBGXzB,OADAF,EAAMwB,QAAQvB,EAAOuB,QACd,eAAKxB,GAEd,QACE,OAAOA,ICDED,EANE+B,YAAgB,CAC7BC,SACAC,OACAC,QACAC,a,mDC+CSC,EAAkB,SAACvC,GAC5B,MAAO,CACLM,KLnDkC,2BKoDlCN,SCxDOwC,EAAb,2MACEC,QAAU,SAACC,GAAW,IAAD,EACkC,EAAKC,MAAMR,OAAxD9C,EADW,EACXA,OAAQC,EADG,EACHA,UAAWC,EADR,EACQA,sBACnBqD,EAAgB,EAAKD,MAArBC,YACF3B,EAAe3B,EAAUC,GAAuB0B,aAAaC,MACjE,KAEIjB,EAAiB,EAAK0C,MAAMR,OAA5BlC,aACNA,EAAayC,GAAS,cAEtBE,GAAY,EAAM3C,GAClB,IAAI4C,GAAQ,EACZ5B,EAAaE,SAAQ,SAACC,GAChBsB,IAAUrB,SAASD,GAAe,IACpC/B,EAAOwB,KAAK,gBAAgB,GAC5BgC,GAAQ,MAIPA,GACHxD,EAAOwB,KAAK,gBAAgB,IApBlC,wEAwBY,IAAD,SAOHiC,KAAKH,MAAMR,OALb7C,EAFK,EAELA,UACAC,EAHK,EAGLA,sBACAQ,EAJK,EAILA,cACAE,EALK,EAKLA,aACAC,EANK,EAMLA,uBAKI6C,EAHWzD,EAAUC,GACNwD,QAAQ7B,MAAM,MAEf8B,KAAI,SAACC,EAAQP,GAC/B,OACE,4BACEQ,IAAKR,EACLD,QAAS,kBAAM,EAAKA,QAAQC,IAC5BpC,KAAK,SACL6C,SAAUpD,EACVqD,UAAS,oCAA+BnD,EAAayC,GAA5C,aAAuDxC,EAAuBwC,GAA9E,MAERO,MAIP,OAAO,yBAAKG,UAAU,YAAYL,OAhDtC,GAA4BM,aAiEbC,eAbS,SAAClD,GACvB,MAAO,CACL+B,OAAQ/B,EAAM+B,WAIQ,SAACoB,EAAUZ,GACnC,MAAO,CACLC,YAAa,SAAC7C,EAAeE,GAC3BsD,EDfqB,SAACxD,EAAcE,GACtC,MAAM,CACFK,KL7CoB,eK8CpBP,gBACAE,gBCWOuD,CAAoBzD,EAAeE,QAInCqD,CAA4Cd,GCjE9CiB,EAAb,YAEE,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRe,cAAgB,WAAO,IACf1D,EAAS,EAAK2C,MAAMR,OAApBnC,KACEuC,EAAoB,EAAKI,MAAzBJ,gBACJvC,EAAO,GAAGuC,EAAgBvC,EAAO,IApBrC,EAAK2D,QAAU,KAFE,EAFrB,iFAMuB,IAAD,SAC2Bb,KAAKH,MAAMR,OAClDyB,EAFY,EACVtE,UADU,EACCC,uBACwByB,YAG3CuB,EAD4BO,KAAKH,MAAzBJ,iBACQqB,GAEhBd,KAAKa,QAASE,aAAY,WACxB,EAAKH,kBACJ,OAfP,6CAkBII,cAAchB,KAAKa,WAlBvB,+BA4BY,IAAD,EAC4Cb,KAAKH,MAAMR,OAAtD7C,EADD,EACCA,UAAWC,EADZ,EACYA,sBAAuBS,EADnC,EACmCA,KACpC+D,EAAWzE,EAAUC,GAAuBwE,SAoBlD,OACE,6BACE,wBAAIX,UAAU,YAAYW,GAC1B,yBAAKX,UAAU,yBACb,0BAAMA,UAAU,qBAAhB,SACA,0BAAMA,UAAU,wBAxBF,SAACpD,GACnB,IACIgE,EAAM,EAeV,OAbIhE,GAAQ,KAEVgE,EAAMhE,EAAO,IACH,KAAIgE,EAAM,IAAMA,GAC1BhE,EAHMA,EAAO,GAGA,GAAKgE,GACThE,EAAO,IAEhBgE,EAAMhE,GACI,KAAIgE,EAAM,IAAMA,GAC1BhE,EAHM,KAGO,IAAMgE,GAEnBhE,EAAO,oBAEFA,EAOqC0D,CAAc1D,UAvDhE,GAA+BqD,aA4EhBC,eAdS,SAAClD,GACvB,MAAO,CACL+B,OAAQ/B,EAAM+B,WAIQ,SAACoB,EAAUZ,GACnC,MAAO,CACLJ,gBAAiB,SAACvC,GAChBuD,EAASC,EAAwBxD,QAKxBsD,CAA4CG,GCpE5CQ,EAVf,iLAEQ,OACI,yBAAKb,UAAU,YAH3B,GAAyBC,aCIZa,G,OAAb,2MACEzB,QAAU,WACR,IAAI9C,EAAWwE,SAASC,eAAe,YAAYC,MAC/CzE,EAAMuE,SAASC,eAAe,OAAOC,OAEzCC,EAD2B,EAAK3B,MAAxB2B,gBACO3E,EAAS0B,SAASzB,KALrC,wEAOY,IAAD,OAEP,OACE,yBAAKwD,UAAU,YACb,0BACEmB,SAAU,SAASC,GACjBA,EAAEC,kBAEJC,OAAO,OACPtB,UAAU,gBAEV,yBAAKA,UAAU,cACb,2BACE9C,KAAK,OACL8C,UAAU,eACVuB,GAAG,WACHC,YAAY,eAGhB,yBAAKxB,UAAU,cACb,2BACE9C,KAAK,OACL8C,UAAU,eACVuB,GAAG,MACHC,YAAY,SAIhB,4BACEtE,KAAK,SACL8C,UAAU,kBACVX,QAAS,kBAAM,EAAKA,YAHtB,eAnCV,GAA8BY,cA4DfC,eAbO,SAAClD,GACrB,MAAM,CACJ+B,OAAO/B,EAAM+B,WAIO,SAACoB,EAASZ,GAChC,MAAO,CACL2B,eAAe,SAAC3E,EAASC,GACvB2D,EJrDmB,SAAC5D,EAASC,GAC/B,MAAM,CACFU,KLTwB,mBKUxBX,WACAC,OIiDO4D,CAAkB7D,EAASC,QAI3B0D,CAA4CY,GChD5CW,G,wLAVX,OACE,yBAAKzB,UAAU,gBACb,yBAAKA,UAAU,8BAA8B0B,KAAK,WAClD,wBAAI1B,UAAU,eAAd,yEACA,yBAAKA,UAAU,8BAA8B0B,KAAK,gB,GANpCzB,cCIT0B,G,OAAb,2MACEC,kBAAoB,YAGlBC,EADkC,EAAKtC,MAA/BsC,yBAFgB,IAKhB5F,EAAW,EAAKsD,MAAMR,OAAtB9C,OACRA,EAAO6F,GAAG,cAAc,SAACC,GACvB9F,EAAOwB,KAAK,YAAY,MAG1BxB,EAAO6F,GAAG,gBAAgB,SAACE,GAAkB,IACnCzF,EAAa,EAAKgD,MAAMR,OAAxBxC,SACJyF,EACF/F,EAAOwB,KAAK,WAAYlB,GACnB0F,MAAM,sDAGfhG,EAAO6F,GAAG,mBAAmB,SAACC,GAAU,IAC9BrF,EAAe,EAAK6C,MAApB7C,WACJqF,EACFrF,GAAW,IAEXuF,MACE,yGAEFvF,GAAW,OAIfT,EAAO6F,GAAG,aAAa,SAACnE,IAEtBuE,EAD0B,EAAK3C,MAAvB2C,eACMvE,MAGhB1B,EAAO6F,GAAG,WAAW,SAACzF,IAEpB8F,EADmB,EAAK5C,MAAhB4C,QACD9F,MAGTJ,EAAO6F,GAAG,aAAa,SAAC5F,IAEtBkG,EAD0B,EAAK7C,MAAvB6C,eACMlG,MAGhBD,EAAO6F,GAAG,yBAAyB,SAAC3F,IAElCkG,EADyB,EAAK9C,MAAtB8C,cACKlG,GAAuB,MAGtCF,EAAO6F,GAAG,YAAY,SAACE,GAAkB,IAAD,EACP,EAAKzC,MAA5B7C,EAD8B,EAC9BA,WAAYyF,EADkB,EAClBA,OACpBzF,GAAW,GACXyF,GAAO,OArDb,EAyDEG,KAAO,WAAO,IAAD,EAC6C,EAAK/C,MAAMR,OAA3D7C,EADG,EACHA,UAAWG,EADR,EACQA,MAAOG,EADf,EACeA,IAAKD,EADpB,EACoBA,SAAUG,EAD9B,EAC8BA,WACzC,OAAkB,OAAdR,GAAsBG,GAASG,GAAOE,EAEtC,yBAAKsD,UAAU,OACb,yBAAKA,UAAU,mCACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAIGxD,GAAOD,IAAaF,GAASK,EAC/B,kBAAC,EAAD,MAEA,kBAAC,EAAD,OAxEb,wEA6EI,OAAO,6BAAMgD,KAAK4C,YA7EtB,GAA4BrC,cA+GbC,eA/BS,SAAClD,GACvB,MAAO,CACL+B,OAAQ/B,EAAM+B,WAIQ,SAACoB,EAAUZ,GACnC,MAAO,CACLsC,sBAAuB,WACrB1B,ENhGK,CACLjD,KLHgC,8BWoGlCiC,gBAAiB,SAACvC,GAChBuD,EAASC,EAAwBxD,KAEnCsF,cAAe,SAACvE,GACdwC,ENxFuB,SAACxC,GAC1B,MAAM,CACFT,KLV8B,yBKW9BS,aMqFOyC,CAAsBzC,KAEjCjB,WAAY,SAACA,GACXyD,ENpFoB,SAACzD,GACvB,MAAM,CACFQ,KLvBoB,eKwBpBR,cMiFO0D,CAAmB1D,KAE9ByF,OAAQ,SAAC9F,GACP8D,ENhFgB,SAAC9D,GACnB,MAAM,CACFa,KL7Be,UK8Bfb,SM6EO+D,CAAe/D,KAE1B+F,cAAe,SAAClG,GACdiE,EN7EuB,SAACjE,GAC1B,MAAM,CACFgB,KLlCsB,iBKmCtBhB,aM0EOkE,CAAsBlE,KAEjCmG,aAAc,SAACE,EAAgB5F,GAC7BwD,EN1EsB,SAAChE,EAAsBQ,GAC/C,MAAM,CACFO,KLvCqB,gBKwCrBf,wBACAQ,iBMsEOyD,CAAqBmC,EAAgB5F,QAIrCuD,CAA4CyB,G,yBCrH9Ca,EAAb,YACE,WAAYjD,GAAQ,IAAD,8BACjB,4CAAMA,KAkDRF,QAAU,WAAO,IAAD,EACwC,EAAKE,MAAMP,KAAzD7C,EADM,EACNA,sBAAuBD,EADjB,EACiBA,UAAWI,EAD5B,EAC4BA,QAD5B,EAEsC,EAAKiD,MAAjDkD,EAFM,EAENA,kBAAmBlE,EAFb,EAEaA,qBAEvBpC,EADmBD,EAAUwG,OACY,IAE3CnE,EADiB,YAAOjC,IAExBmG,MA1De,EA8DnBnC,cAAgB,WAAO,IACf1D,EAAS,EAAK2C,MAAMP,KAApBpC,KACEuC,EAAoB,EAAKI,MAAzBJ,gBACJvC,EAAO,GACTuC,EAAgBvC,EAAO,IAhEzB,EAAK2D,QAAU,KAFE,EADrB,iFAMuB,IAAD,SAEmCb,KAAKH,MAAMP,KAAxD9C,EAFU,EAEVA,UAAWC,EAFD,EAECA,sBAAsBG,EAFvB,EAEuBA,QAEnCkE,EAAItE,EAAUC,GAAuByB,WAJzB,EAM+B8B,KAAKH,MAA9CJ,EANU,EAMVA,iBACRZ,EAPkB,EAMMA,sBACH,YAAIjC,IACzB6C,EAAgBqB,GAEhBd,KAAKa,QAAUE,aAAY,WACzB,EAAKH,kBACJ,KAEgBZ,KAAKH,MAAMP,KAAtB/C,OAGD6F,GAAG,gBAAgB,SAACC,GAAU,IAAD,EACW,EAAKxC,MAAMP,KAAhD9C,EAD0B,EAC1BA,UAAWC,EADe,EACfA,sBACXG,EAAY,EAAKiD,MAAMP,KAAvB1C,QACAqG,EAAiB,EAAKpD,MAAtBoD,aACFvG,EAAQF,EAAUC,GAAuBC,MAC/C,GAAI2F,EAAKa,QAAS,CAChB,IAAMtD,EAAQhD,EAAQuG,WAAU,SAACC,GAAD,OAAOA,EAAEvB,KAAOQ,EAAKR,MAErDjF,EAAQgD,GAAS,CACfiC,GAAIjF,EAAQgD,GAAOiC,GACnBhF,SAAUD,EAAQgD,GAAO/C,SACzBwG,cAAezG,EAAQgD,GAAOyD,cAAgB,EAC9C3G,MAAOE,EAAQgD,GAAOlD,MAAQA,GAEhCE,EAAQ0G,MAAK,SAAUC,EAAGC,GACxB,OAAID,EAAE7G,MAAQ8G,EAAE9G,OACN,EAEN8G,EAAE9G,MAAQ6G,EAAE7G,MACP,EAEF,KAIXuG,EAAarG,QAhDnB,6CAuEIoE,cAAchB,KAAKa,WAvEvB,+BA0EY,IAAD,EASHb,KAAKH,MAAMP,KAPb7C,EAFK,EAELA,sBACAD,EAHK,EAGLA,UACAoC,EAJK,EAILA,oBACAhC,EALK,EAKLA,QACAM,EANK,EAMLA,KACAE,EAPK,EAOLA,uBACAyB,EARK,EAQLA,qBAEIoC,EAAWzE,EAAUC,GACrBC,EAAQF,EAAUC,GAAuBC,MACzCmG,EAAiBrG,EAAUwG,OAC3BS,EAAgB7G,EAAQoG,OAE1BU,EAA0B9G,EAAQsD,KAAI,SAACyD,EAAQC,GACjD,OACE,2BAAOxD,IAAKwD,GACV,4BACE,wBAAIC,MAAM,OAAQD,GAAK,EAAvB,KACA,4BAAKD,EAAO9G,UACZ,4BAAK8G,EAAON,eACZ,4BAAKM,EAAOjH,YAMhBoH,EAA2BjF,EAAqBqB,KAAI,SAACyD,EAAQC,GAC/D,OACE,2BAAOxD,IAAKwD,GACV,4BACE,wBAAIC,MAAM,OAAQD,GAAK,GACvB,4BAAKD,EAAO9G,UACZ,4BAAK8G,EAAON,eACZ,4BAAKM,EAAOjH,YAeduD,EADMgB,EAAShB,QAAQ7B,MAAM,MACf8B,KAAI,SAACC,EAAQP,GAC/B,OACE,4BACEQ,IAAKR,EACLpC,KAAK,SACL8C,UAAS,oCAA+BlD,EAAuBwC,GAAtD,MAERO,MAyBP,OACE,yBAAKG,UAAU,QACb,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,YAAYW,EAASA,UACnC,yBAAKX,UAAU,OACb,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,qBAAhB,SACA,0BAAMA,UAAU,wBA3BN,SAACpD,GACnB,IACIgE,EAAM,EAeV,OAbIhE,GAAQ,KAEVgE,EAAMhE,EAAO,IACH,KAAIgE,EAAM,IAAMA,GAC1BhE,EAAO,IAHDA,EAAO,GAGWgE,GACfhE,EAAO,IAEhBgE,EAAMhE,GACI,KAAIgE,EAAM,IAAMA,GAC1BhE,EAHM,KAGO,IAAMgE,GAEnBhE,EAAO,oBAEFA,EAWI0D,CAAc1D,KAGnB,yBAAKoD,UAAU,yBACb,0BAAMA,UAAU,qBAAhB,UACA,0BAAMA,UAAU,wBAAwB5D,KAI5C,yBAAK4D,UAAU,QAEf,yBAAKA,UAAU,WAAWL,IAE5B,yBAAKK,UAAU,oBACb,wDACgB7D,GAAyB,EADzC,MACgDoG,GAEhD,yEACoBjE,EADpB,KAC2C6E,GAE3C,4BACEjG,KAAK,SACL8C,UAAU,+BACVX,QAASK,KAAKL,SAHhB,gBAKgB,IACd,uBAAGW,UAAU,qBAAqByD,cAAY,UAEhD,yBAAKzD,UAAU,8CACb,2BAAOA,UAAU,2CACf,+BACE,4BACE,wBAAIuD,MAAM,OAAV,OACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,iDACA,wBAAIA,MAAM,OAAV,4BAnFC,IAAT3G,EACKwG,EAEAI,UAvHf,GAA8BvD,aA0OfC,eAxBS,SAAClD,GACvB,MAAO,CACLgC,KAAMhC,EAAMgC,SAIU,SAACmB,EAAUZ,GACnC,MAAO,CAELJ,gBAAiB,SAACvC,GAChBuD,EC7KyB,SAACvD,GAC9B,MAAO,CACLM,KblCkC,yBamClCN,QD0KWwD,CAAwBxD,KAEnC2B,qBAAsB,SAACA,GACrB4B,EC/M8B,SAAC5B,GACnC,MAAO,CACLrB,KbRkC,yBaSlCqB,wBD4MW6B,CAA6B7B,KAGxCkE,kBAAmB,SAACtG,GAClBgE,ECvM2B,SAAChE,GAChC,MAAO,CACLe,KblB+B,sBamB/Bf,yBDoMWiE,CAA0BjE,KAErCwG,aAAc,SAACrG,GACb6D,EC7LsB,SAAC7D,GAC3B,MAAO,CACLY,Kb7ByB,gBa8BzBZ,WD0LW8D,CAAqB9D,QAIrB4D,CAA4CsC,G,qCEvO9CkB,GAAb,2MA6BEtB,cA7BF,sBA6BkB,gCAAAa,EAAA,6DACNU,EAAiB,EAAKpE,MAAtBoE,aACFC,EAAQC,aAAaC,QAAQ,SAFrB,SAGUC,KAAMC,IAAItI,EAAsB,CACtDuI,QAAS,CAAE,iBAAiB,GAAjB,OAAqBL,MAJpB,OAGR1H,EAHQ,OAMdyH,EAAazH,EAAU6F,MANT,2CA7BlB,EAsCE1C,QAtCF,sBAsCY,kCAAA4D,EAAA,wDACsB,EAAK1D,MAAMP,KAAjC/C,EADA,EACAA,OAAQC,EADR,EACQA,UACRgI,EAAmB,EAAK3E,MAAxB2E,eACRjI,EAAOwB,KAAK,SAAS,GACrBxB,EAAOwB,KAAK,YAAavB,GACzBgI,GAAe,GALP,2CAtCZ,EA8CEC,UAAY,SAAC5C,GACQ,EAAKhC,MAAMP,KAAtB/C,OACDwB,KAAK,aAAc8D,IAhD9B,mFACuB,IAAD,QAGlB6C,EADgC1E,KAAKH,MAA7B6E,uBAGR1E,KAAK0C,gBALa,MAOM1C,KAAKH,MAAMP,KAA3B/C,EAPU,EAOVA,OAAQO,EAPE,EAOFA,IAEhBP,EAAOwB,KAAK,aAAcjB,GAE1BP,EAAO6F,GAAG,aAAa,SAACnE,IAEtBuE,EAD0B,EAAK3C,MAAvB2C,eACMvE,MAIhB1B,EAAO6F,GAAG,cAAc,SAACC,GAAU,IAC3BzF,EAAY,EAAKiD,MAAMP,KAAvB1C,QACFgD,EAAQhD,EAAQuG,WAAU,SAACC,GAAD,OAAOA,EAAEvG,WAAawF,KAChDzC,GAAS,IACXhD,EAAQ+H,OAAO/E,EAAO,IAEtBgF,EADuB,EAAK/E,MAApB+E,YACGhI,SAxBnB,+BAmDY,IAAD,SACkBoD,KAAKH,MAAMP,KAA5B1C,EADD,EACCA,QAASE,EADV,EACUA,IACX+H,EAAejI,EAAQoG,OACzB8B,EAAclI,EAAQsD,KAAI,SAACyD,EAAQ/D,GACrC,OACE,4BACEpC,KAAK,SACL4C,IAAKR,EACLD,QAAS,kBAAM,EAAK8E,UAAUd,EAAO9B,KACrCvB,UAAU,0BAETqD,EAAO9G,SANV,IAMoB,uBAAGyD,UAAU,cAAcyD,cAAY,aAI/D,OACE,yBAAKzD,UAAU,mBACb,2BAAOA,UAAU,YAAYyE,UAAQ,EAACC,MAAI,EAACC,UAAQ,GACjD,4BAAQC,IAAKC,QAEf,uBAAG7E,UAAU,OAAb,OAAwBxD,GACxB,yBAAKwD,UAAU,aACb,4BACE9C,KAAK,SACLmC,QAASK,KAAKL,QACdW,UAAU,mBAHZ,eAQF,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,eAAd,6CAAkDuE,EAAlD,KACA,yBAAKvE,UAAU,WAAWwE,SAnFpC,GAAqCvE,aAkHtBC,gBAzBS,SAAClD,GACvB,MAAO,CACLgC,KAAMhC,EAAMgC,SAIU,SAACmB,EAAUZ,GACnC,MAAO,CACL6E,oBAAqB,WACnBjE,EDtGG,CACLjD,KbOgC,4BcgGhCyG,aAAc,SAACzH,GACbiE,EDpGsB,SAACjE,GAC3B,MAAO,CACLgB,KbEsB,eaDtBhB,aCiGWkE,CAAqBlE,KAEhCgI,eAAgB,SAACY,GACf3E,EDpFG,CACLjD,Kbb4B,mBac5BmB,UCkFkCyG,KAElC5C,cAAe,SAACvE,GACdwC,EDpGuB,SAACxC,GAC5B,MAAO,CACLT,KbH2B,kBaI3BS,aCiGWyC,CAAsBzC,KAEjC2G,WAAY,SAAChI,GACX6D,ED9EoB,SAAC7D,GACzB,MAAO,CACLY,KbxBuB,cayBvBZ,WC2EW8D,CAAmB9D,QAInB4D,CAA4CwD,IC/G9CqB,I,OAAb,2MAKEC,WALF,sBAKe,4BAAA/B,EAAA,6DACPW,EAAQC,aAAaC,QAAQ,SADtB,SAEOC,KAAMkB,KAAKpJ,EAAgB,CAAE+H,MAAOA,IAF3C,cAGF7B,OACP8B,aAAaqB,WAAW,SACxB,EAAK3F,MAAM4F,QAAQzH,KAAK,UACxB0H,OAAOC,SAASC,UANP,2CALf,2FAEI5F,KAAKsF,eAFT,+BAiBI,OADYnB,aAAaC,QAAQ,SAETpE,KAAKH,MAAMP,KAAzBX,UAEC,kBAAC,EAAD,MAEA,kBAAC,GAAD,MAGF,kBAAC,IAAD,CAAUkH,GAAG,eAzB1B,GAA0BtF,cAoCXuF,eAAWtF,aANF,SAAClD,GACvB,MAAO,CACLgC,KAAMhC,EAAMgC,QAImC,KAAzBkB,CAA+B6E,KClC1CU,GAVf,iLAEQ,OACI,sGAHZ,GAA8BxF,a,kBCIxByF,G,2MACJC,eAAiB,SAACC,GAChB,IAAMC,EAAO,CACXpH,SAAUmH,EAASE,WAAWC,SAC9BrH,SAAUkH,EAASE,WAAWE,KAC9BrH,MAAOiH,EAASE,WAAWnH,OAEvBiF,EAAQgC,EAASK,QACvBlC,KAAMkB,KAAKnJ,EAAe,CAAE+J,KAAMA,EAAMjC,MAAOA,IAASsC,MAAK,SAACC,GAC5DtC,aAAauC,QAAQ,QAASD,EAAIpE,KAAK6B,OACvC,EAAKrE,MAAM4F,QAAQzH,KAAK,a,EAI5B2I,UAAY,SAACC,GACXC,QAAQC,IAAIF,I,wEAEJ,IAAD,OACP,OACE,kBAAC,eAAD,CACEtG,UAAU,kCACVyG,SAAS,2EACTC,UAAW,SAACP,GAAD,OAAS,EAAKR,eAAeQ,IACxCE,UAAW,SAACjF,GAAD,OAAO,EAAKiF,UAAUjF,KAJnC,2B,GAnBenB,aA+BNuF,eAAWE,I,oBC/BpBiB,G,2MACJC,iB,uCAAmB,WAAOhB,GAAP,iBAAA3C,EAAA,6DACX4C,EAAO,CACXpH,SAAUmH,EAASrE,GACnB7C,SAAUkH,EAASI,KACnBrH,MAAOiH,EAASjH,OAEZiF,EAAQgC,EAASiB,YANN,SAOX9C,KACHkB,KAAKlJ,EAAiB,CAAE8J,KAAMA,EAAMjC,MAAOA,IAC3CsC,MAAK,SAACC,GACLI,QAAQC,IAAIL,EAAIpE,KAAK6B,OACrBC,aAAauC,QAAQ,QAASD,EAAIpE,KAAK6B,OAEvC,EAAKrE,MAAM4F,QAAQzH,KAAK,YAbX,2C,8HAkBjB,OACE,kBAAC,KAAD,CACEoJ,SAAS,2CACTC,MAAM,kBACNC,UAAU,EACVC,OAAO,qBACPC,SAAUxH,KAAKkH,uB,GAzBA3G,aAgCRuF,eAAWmB,IC5BpBQ,I,iNACJC,SAAW,SAAChG,GACV,IAAM4E,EAAO5E,EAAEiG,OAAOrB,KAChB/E,EAAQG,EAAEiG,OAAOpG,MACjBzC,EAAY,EAAKe,MAAMN,MAAvBT,SAMN8I,EALmB,EAAK/H,MAAlB+H,UACN9I,EAAO,eACFA,EADE,gBAEJwH,EAAO/E,M,EAKZsG,QAAU,WAAO,IACP/I,EAAY,EAAKe,MAAMN,MAAvBT,QACRuF,KAAMkB,KAAKtJ,EAAU6C,GAAS0H,MAAK,SAACC,GAC9BA,EAAIpE,KAAKyF,WAAWvF,MAAMwF,KAAKC,UAAUvB,EAAIpE,KAAKyF,YAClDrB,EAAIpE,KAAK6B,QACXC,aAAauC,QAAQ,QAASD,EAAIpE,KAAK6B,OACvC,EAAKrE,MAAM4F,QAAQzH,KAAK,c,wEAO5B,OADcmG,aAAaC,QAAQ,SAE1B,kBAAC,IAAD,CAAUyB,GAAG,UAGpB,yBAAKvF,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAcsB,OAAO,OAAOC,GAAG,aAC7C,yBACEqD,IAAI,mFACJ5E,UAAU,gBACV2H,IAAI,KAEN,yBAAK3H,UAAU,oBACb,2BACE9C,KAAK,OACLqE,GAAG,gBACHyE,KAAK,WACLhG,UAAU,eACVwB,YAAY,WACZoG,WAAS,EACTN,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,iBAAf,aAGF,yBAAK7H,UAAU,oBACb,2BACE9C,KAAK,WACLqE,GAAG,gBACHyE,KAAK,WACLhG,UAAU,eACVwB,YAAY,WACZ8F,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,iBAAf,aAEF,yBAAK7H,UAAU,uCACb,2BACE9C,KAAK,WACL8C,UAAU,uBACVuB,GAAG,eACH+F,SAAU5H,KAAK0H,WAEjB,2BACEpH,UAAU,uBACV6H,QAAQ,gBAFV,sBAOF,4BACE7H,UAAU,kDACV9C,KAAK,SACLmC,QAASK,KAAK6H,SAHhB,SAQA,kBAAC,IAAD,CACEO,SAAO,EACP9H,UAAU,iCACVuF,GAAG,cAHL,YAOA,wBAAIvF,UAAU,SACd,kBAAC,GAAD,MACA,kBAAC,GAAD,gB,GAhGEC,cAwHLuF,eAAWtF,aAbF,SAAClD,GACvB,MAAO,CACLiC,MAAOjC,EAAMiC,UAIS,SAACkB,EAAUZ,GACnC,MAAO,CACL+H,SAAU,SAAC9I,GACT2B,EC7HkB,SAAA3B,GACtB,MAAO,CACLtB,KpBkB2B,kBoBjB3BsB,WD0HW4B,CAAiB5B,QAIN0B,CAA4CiH,KEzHhEY,G,2MACJC,eAAiB,SAACxJ,GAChB,OACsB,MAApBA,EAAQC,UACY,MAApBD,EAAQE,UACS,MAAjBF,EAAQG,OACmB,MAA3BH,EAAQK,iBACRL,EAAQI,WAAaJ,EAAQK,iB,EAMjC0I,QAAU,WAAO,IACP/I,EAAY,EAAKe,MAAML,SAAvBV,QACFyJ,EAAG,eAAQzJ,GACb,EAAKwJ,eAAexJ,WACfyJ,EAAIpJ,gBACXkF,KAAMkB,KAAKrJ,EAAaqM,GAAK/B,MAAK,SAACC,GACjClE,MAAMkE,EAAIpE,UAGZE,MAAM,8E,EAGVmF,SAAW,SAAChG,GACV,IAAM4E,EAAO5E,EAAEiG,OAAOrB,KAChB/E,EAAQG,EAAEiG,OAAOpG,MACjBzC,EAAY,EAAKe,MAAML,SAAvBV,SAMN8I,EALmB,EAAK/H,MAAlB+H,UACN9I,EAAO,eACFA,EADE,gBAEJwH,EAAO/E,M,wEAOV,OADc4C,aAAaC,QAAQ,SAE1B,kBAAC,IAAD,CAAUyB,GAAG,UAGpB,yBAAKvF,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAcsB,OAAO,OAAOC,GAAG,aAC7C,yBACEqD,IAAI,6EACJ5E,UAAU,iBACV2H,IAAI,KAEN,yBAAK3H,UAAU,oBACb,2BACE9C,KAAK,OACL8I,KAAK,WACLzE,GAAG,gBACHvB,UAAU,eACVwB,YAAY,WACZoG,WAAS,EACTN,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,iBAAf,aAEF,yBAAK7H,UAAU,oBACb,2BACE9C,KAAK,OACL8I,KAAK,WACLzE,GAAG,gBACHvB,UAAU,eACVwB,YAAY,YACZ8F,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,iBAAf,cAEF,yBAAK7H,UAAU,oBACb,2BACE9C,KAAK,QACL8I,KAAK,QACLzE,GAAG,aACHvB,UAAU,eACVwB,YAAY,gBACZ8F,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,cAAf,kBAEF,6BACA,yBAAK7H,UAAU,oBACb,2BACE9C,KAAK,WACL8I,KAAK,WACLzE,GAAG,gBACHvB,UAAU,eACVwB,YAAY,WACZ8F,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,iBAAf,aAEF,yBAAK7H,UAAU,oBACb,2BACE9C,KAAK,WACL8I,KAAK,kBACLzE,GAAG,uBACHvB,UAAU,eACVwB,YAAY,WACZ8F,SAAU5H,KAAK0H,WAEjB,2BAAOS,QAAQ,wBAAf,qBAKF,4BACE7H,UAAU,kDACV9C,KAAK,SACLmC,QAASK,KAAK6H,SAHhB,YAQA,kBAAC,IAAD,CAAMvH,UAAU,iCAAiCuF,GAAG,WAApD,SAGA,wBAAIvF,UAAU,SACd,kBAAC,GAAD,MACA,kBAAC,GAAD,gB,GA/HKC,aAsJRC,gBAbS,SAAClD,GACvB,MAAO,CACLkC,SAAUlC,EAAMkC,aAIM,SAACiB,EAAUZ,GACnC,MAAO,CACL+H,SAAU,SAAC9I,GACT2B,EC1JkB,SAAA3B,GACtB,MAAO,CACLtB,KtBoB8B,qBsBnB9BsB,WDuJW4B,CAAiB5B,QAIjB0B,CAA4C6H,I,oBEzJrDG,G,2MAKJlD,W,sBAAa,4BAAA/B,EAAA,6DACPW,EAAQC,aAAaC,QAAQ,SADtB,SAEOC,KAAMkB,KAAKpJ,EAAgB,CAAE+H,MAAOA,IAF3C,cAGF7B,OACP8B,aAAaqB,WAAW,SACxB,EAAK3F,MAAM4F,QAAQzH,KAAK,UACxB0H,OAAOC,SAASC,UANP,2C,EAUb6C,OAAS,WACPtE,aAAaqB,WAAW,U,2FAdxBxF,KAAKsF,e,+BAgBG,IAAD,OACDpB,EAAQC,aAAaC,QAAQ,SACnC,GAAc,OAAVF,EACF,OAAO,kBAAC,IAAD,CAAU2B,GAAG,WAEtB,IACM9G,EADc2J,KAAUxE,GACDlF,SAC7B,OACE,6BACE,yBAAKsB,UAAU,qDACb,wBAAIA,UAAU,cAAd,QAEA,yBAAKA,UAAU,kBACb,yBACEA,UAAU,2BACVqI,cAAY,WACZC,gBAAc,SAEd,uBAAGtI,UAAU,4BAA4ByD,cAAY,UAEvD,yBAAKzD,UAAU,gBAAgBuI,kBAAgB,kBAC7C,yBAAKvI,UAAU,kBACb,uBAAGA,UAAU,4BAA4ByD,cAAY,SACrD,wBAAIzD,UAAU,iBAAd,MAAkCvB,IAGpC,yBAAKuB,UAAU,mBACb,kBAAC,IAAD,CACEA,UAAU,WACVuF,GAAG,UACHlG,QAAS,kBAAM,EAAK8I,WAEpB,uBAAGnI,UAAU,iBAAiByD,cAAY,SAL5C,gCAWR,yBAAKzD,UAAU,cACb,kBAAC,IAAD,CAAMuF,GAAG,YAAY8B,OAAO,UAC1B,4BAAQnK,KAAK,SAAS8C,UAAU,0BAAhC,mB,GA1DOC,aAoEJuF,eAAW0C,ICnCXM,GA7Bf,iLAEI,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,GACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,GAC3B,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,GACxB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,GAC3B,kBAAC,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,GAAD,aArBZ,GAAyBzI,aCEL0I,QACW,cAA7BvD,OAAOC,SAASuD,UAEe,UAA7BxD,OAAOC,SAASuD,UAEhBxD,OAAOC,SAASuD,SAASC,MACvB,2DCPN,IAAMC,GAAQC,YAAYhM,GAE1BiM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,OAEF/H,SAASC,eAAe,SDkHpB,kBAAmBkI,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEdC,OAAM,SAAAjD,GACLC,QAAQD,MAAMA,EAAMkD,a,wCEzI5BC,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.65b23514.chunk.js","sourcesContent":["const url = `http://localhost:8000`;\r\nexport const endPoint = url;\r\nexport const endPointDataQuestion = `${url}/api/questions`;\r\nexport const urlLogin = `${url}/api/account/login`;\r\nexport const urlRegister = `${url}/api/account/register`;\r\nexport const urlVerifyToken = `${url}/api/account/verify`;\r\nexport const urlAuthGoogle = `${url}/api/account/auth/google`;\r\nexport const urlAuthFacebook = `${url}/api/account/auth/facebook`;\r\n\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../constants/endPoint\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar initState = {\r\n  socket: null,\r\n  questions: null,\r\n  numberCurrentQuestion: 0,\r\n  score: 0,\r\n  start: false,\r\n  members: [],\r\n  nickName: \"\",\r\n  pin: \"\",\r\n  arrRoom: [],\r\n  isJoinRoom: false,\r\n  disableAnswer: false,\r\n  time: 0,\r\n  answersColor: [\"\", \"\", \"\", \"\"],\r\n  answersBackgroundColor: [\"\", \"\", \"\", \"\"],\r\n};\r\n\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.CONNECT_SOCKET_IO_PLAYER: {\r\n      const options = {\r\n        rememberUpgrade: true,\r\n        transports: [\"websocket\"],\r\n        secure: true,\r\n        rejectUnauthorized: false,\r\n      };\r\n      const socket = openSocket(endPoint, options);\r\n\r\n      state.socket = socket;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.CLICK_SUBMIT_PIN: {\r\n      state.socket.emit(\"join_room\", action.pin);\r\n      state.pin = action.pin;\r\n      state.nickName = action.nickName;\r\n      return { ...state };\r\n    }\r\n    case types.IS_JOIN_ROOM: {\r\n      state.isJoinRoom = action.isJoinRoom;\r\n      return { ...state };\r\n    }\r\n    case types.SAVE_NEW_MEMBER_PLAYER: {\r\n      state.members.push(action.newMember);\r\n      return { ...state };\r\n    }\r\n\r\n    case types.IS_PLAY: {\r\n      state.start = action.start;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTIONS: {\r\n      state.questions = action.questions;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTION: {\r\n      state.disableAnswer = false;\r\n      state.answersColor = [\"\", \"\", \"\", \"\"];\r\n      state.answersBackgroundColor = [\"\", \"\", \"\", \"\"];\r\n      state.numberCurrentQuestion = action.numberCurrentQuestion;\r\n      if (state.questions)\r\n        state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_ANSWER: {\r\n      state.disableAnswer = action.disableAnswer;\r\n      state.answersColor = action.answersColor;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION_PLAYER: {\r\n      state.time = action.time;\r\n\r\n      if (state.time === 0) {\r\n        var rightAnswers = state.questions[\r\n          state.numberCurrentQuestion\r\n        ].rightAnswers.split(\",\");\r\n        rightAnswers.forEach((rightAnswer) => {\r\n          state.answersBackgroundColor[parseInt(rightAnswer) - 1] =\r\n            \"bg-success\";\r\n        });\r\n        state.disableAnswer = true;\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","//Player Actions\r\nexport const CONNECT_SOCKET_IO_PLAYER=\"CONNECT_SOCKET_IO_PLAYER\"\r\nexport const CLICK_SUBMIT_PIN = \"CLICK_SUBMIT_PIN\";\r\nexport const IS_JOIN_ROOM = \"IS_JOIN_ROOM\";\r\nexport const IS_PLAY = \"IS_PLAY\";\r\nexport const LOAD_QUESTIONS = \"LOAD_QUESTIONS\";\r\nexport const LOAD_QUESTION = \"LOAD_QUESTION\";\r\nexport const CLICK_ANSWER = \"CLICK_ANSWER\";\r\nexport const SET_TIME_QUESTION_PLAYER = \"SET_TIME_QUESTION_PLAYER\";\r\nexport const SAVE_NEW_MEMBER_PLAYER = \"SAVE_NEW_MEMBER_PLAYER\";\r\n//Host Actions\r\nexport const CONNECT_SOCKET_IO_HOST=\"CONNECT_SOCKET_IO_HOST\"\r\nexport const GET_QUESTION=\"GET_QUESTION\"\r\nexport const SAVE_NEW_MEMBER = \"SAVE_NEW_MEMBER\";\r\nexport const MEMBER_BEFORE_TIME_OUT = \"MEMBER_BEFORE_TIME_OUT\";\r\nexport const CLICK_START_PLAY = \"CLICK_START_PLAY\";\r\nexport const CLICK_NEXT_QUESTION = \"CLICK_NEXT_QUESTION\";\r\nexport const MEMBER_EXIT = \"MEMBER_EXIT\";\r\nexport const MEMBER_ANSWER = \"MEMBER_ANSWER\";\r\nexport const SET_TIME_QUESTION_HOST = \"SET_TIME_QUESTION_HOST\";\r\n//Login Actions\r\nexport const ON_CHANGE_LOGIN = \"ON_CHANGE_LOGIN\";\r\n//Register Actions\r\nexport const ON_CHANGE_REGISTER = \"ON_CHANGE_REGISTER\";\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../constants/endPoint\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar initState = {\r\n  socket: null,\r\n  pin: Math.floor(Math.random() * 1000000) + 1,\r\n  startPlay: false,\r\n  questions: [],\r\n  numberMembersAnswer: 0,\r\n  members: [],\r\n  membersBeforeTimeOut: [],\r\n  numberCurrentQuestion: 0,\r\n  time: 0,\r\n  answersBackgroundColor: [\"\", \"\", \"\", \"\"],\r\n};\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.CONNECT_SOCKET_IO_HOST: {\r\n      const options = {\r\n        rememberUpgrade: true,\r\n        transports: [\"websocket\"],\r\n        secure: true,\r\n        rejectUnauthorized: false,\r\n      };\r\n      const socket = openSocket(endPoint, options);\r\n      state.socket = socket;\r\n      return { ...state };\r\n    }\r\n    case types.SAVE_NEW_MEMBER: {\r\n      state.members.push(action.newMember);\r\n      return { ...state };\r\n    }\r\n    case types.MEMBER_BEFORE_TIME_OUT: {\r\n      state.membersBeforeTimeOut = action.membersBeforeTimeOut;\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_START_PLAY: {\r\n      state.startPlay = action.startPlay;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.GET_QUESTION: {\r\n      state.questions = [...action.questions];\r\n      return { ...state };\r\n    }\r\n\r\n    case types.CLICK_NEXT_QUESTION: {\r\n      state.socket.emit(\"next\", 1);\r\n      state.numberCurrentQuestion += 1;\r\n      state.answersBackgroundColor = [\"\", \"\", \"\", \"\"];\r\n      state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      state.numberMembersAnswer = 0;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_EXIT: {\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_ANSWER: {\r\n      state.numberMembersAnswer += 1;\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION_HOST: {\r\n      state.time = action.time;\r\n      if (state.time === 0) {\r\n        var rightAnswers =\r\n          state.questions[state.numberCurrentQuestion].rightAnswers.split(',');\r\n        rightAnswers.forEach((rightAnswer) => {\r\n          state.answersBackgroundColor[parseInt(rightAnswer) - 1] =\r\n            \"bg-success\";\r\n        });\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initState = {\r\n    account:{\r\n      userName:null,\r\n      fullName:null,\r\n      email:null,\r\n      passWord:null,\r\n      confirmPassword:null\r\n    }\r\n};\r\n\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.ON_CHANGE_REGISTER: {\r\n      state.account=action.account;\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initState = {\r\n    account:null\r\n};\r\n\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.ON_CHANGE_LOGIN: {\r\n      state.account=action.account\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import {combineReducers} from \"redux\";\r\nimport player from \"./player.reducer\"\r\nimport host from \"./host.reducer\"\r\nimport register from \"./register.reducer\";\r\nimport login from \"./login.reducer\"\r\n\r\nconst myReducer =combineReducers({\r\n    player,\r\n    host,\r\n    login,\r\n    register\r\n})\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\"\r\n\r\nexport const connectSocketIoPlayer = () => {\r\n    return {\r\n      type: types.CONNECT_SOCKET_IO_PLAYER\r\n    };\r\n  };\r\n\r\n\r\nexport const submitPIN = (nickName,pin)=>{\r\n    return{\r\n        type:types.CLICK_SUBMIT_PIN,\r\n        nickName,\r\n        pin\r\n    }\r\n}\r\n\r\nexport const saveNewMember = (newMember)=>{\r\n    return{\r\n        type:types.SAVE_NEW_MEMBER_PLAYER,\r\n        newMember\r\n    }\r\n}\r\n\r\nexport const isJoinRoom = (isJoinRoom)=>{\r\n    return{\r\n        type:types.IS_JOIN_ROOM,\r\n        isJoinRoom\r\n    }\r\n}\r\n\r\nexport const isPlay = (start)=>{\r\n    return{\r\n        type:types.IS_PLAY,\r\n        start\r\n    }\r\n}\r\nexport const loadQuestions = (questions)=>{\r\n    return{\r\n        type:types.LOAD_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\nexport const loadQuestion = (numberCurrentQuestion,disableAnswer)=>{\r\n    return{\r\n        type:types.LOAD_QUESTION,\r\n        numberCurrentQuestion,\r\n        disableAnswer\r\n    }\r\n}\r\nexport const clickAnswer = (disableAnswer,answersColor)=>{\r\n    return{\r\n        type:types.CLICK_ANSWER,\r\n        disableAnswer,\r\n        answersColor \r\n    }\r\n}\r\nexport const setTimeQuestion = (time) => {\r\n    return {\r\n      type: types.SET_TIME_QUESTION_PLAYER,\r\n      time\r\n    };\r\n  };\r\n  \r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Answer extends Component {\r\n  onClick = (index) => {\r\n    const { socket, questions, numberCurrentQuestion } = this.props.player;\r\n    const { clickAnswer } = this.props;\r\n    const rightAnswers = questions[numberCurrentQuestion].rightAnswers.split(\r\n      \",\"\r\n    );\r\n    var { answersColor } = this.props.player;\r\n    answersColor[index] = \"text-danger\";\r\n\r\n    clickAnswer(true, answersColor);\r\n    var right = false;\r\n    rightAnswers.forEach((rightAnswer) => {\r\n      if (index === parseInt(rightAnswer) - 1) {\r\n        socket.emit(\"memberAnswer\", true);\r\n        right = true;\r\n      }\r\n    });\r\n\r\n    if (!right) {\r\n      socket.emit(\"memberAnswer\", false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      numberCurrentQuestion,\r\n      disableAnswer,\r\n      answersColor,\r\n      answersBackgroundColor,\r\n    } = this.props.player;\r\n    const question = questions[numberCurrentQuestion];\r\n    const arr = question.answers.split(\"||\");\r\n\r\n    const answers = arr.map((answer, index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          onClick={() => this.onClick(index)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className={`col-10 col-sm-5 btnAnswer ${answersColor[index]}  ${answersBackgroundColor[index]} `}\r\n        >\r\n          {answer}\r\n        </button>\r\n      );\r\n    });\r\n    return <div className=\"answers \">{answers}</div>;\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickAnswer: (disableAnswer, answersColor) => {\r\n      dispatch(actions.clickAnswer(disableAnswer, answersColor));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Answer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\n\r\nexport class Questions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.player;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer= setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 300);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.idTimer)\r\n  }\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.player;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) setTimeQuestion(time - 1);\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { questions, numberCurrentQuestion, time } = this.props.player;\r\n    const question = questions[numberCurrentQuestion].question;\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n    return (\r\n      <div>\r\n        <h2 className=\"question\">{question}</h2>\r\n        <div className=\"bg-dark timecountdown\">\r\n          <span className=\"pl-3 text-warning\">Time:</span>\r\n          <span className=\"pl-3 pr-3 text-white\">{timeCountDown(time)}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    }\r\n    \r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Questions);\r\n","import React, { Component } from 'react';\r\n\r\nexport class Img extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"img\">\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Img;\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport * as actions from \"../../actions/actionPlayer\"\r\n\r\nimport './EnterPin.css'\r\n\r\nexport class EnterPin extends Component {\r\n  onClick = () => {\r\n    var nickName = document.getElementById(\"nickName\").value;\r\n    var pin = document.getElementById(\"pin\").value;\r\n    const { clickSubmitPin } = this.props;\r\n    clickSubmitPin(nickName,parseInt(pin));\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"enterpin\">\r\n        <form\r\n          onSubmit={function(e) {\r\n            e.preventDefault();\r\n          }}\r\n          method=\"POST\"\r\n          className=\"formEnterpin\"\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"nickName\"\r\n              placeholder=\"Nick Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"pin\"\r\n              placeholder=\"PIN\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.onClick()}\r\n          >\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps=(state)=>{\r\n  return{\r\n    player:state.player\r\n  }\r\n}\r\n\r\nconst mapDispathToProps=(dispatch,props)=>{\r\n  return({\r\n    clickSubmitPin:(nickName,pin)=>{\r\n      dispatch(actions.submitPIN(nickName,pin))\r\n    }\r\n  })\r\n}\r\nexport default connect(mapStatetoProps,mapDispathToProps) (EnterPin);\r\n","import React, { Component } from \"react\";\r\n\r\n//...\r\n\r\nimport \"./Waiting.css\";\r\n\r\nclass Waiting extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"waiting row \">\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n        <h1 className=\"text-danger\">Đợi chủ trò bắt đầu trò chơi</h1>\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Waiting;\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\nimport Answer from \"./Answer\";\r\nimport Question from \"./Questions\";\r\nimport Img from \"./Img\";\r\nimport EnterPin from \"./EnterPin\";\r\nimport Waiting from \"./Waiting\";\r\nimport \"./Player.css\";\r\n\r\nexport class Player extends Component {\r\n  componentDidMount = () => {\r\n    //Kết nối Player với SocketIo\r\n    const { connectSocketIoPlayer } = this.props;\r\n    connectSocketIoPlayer();\r\n\r\n    const { socket } = this.props.player;\r\n    socket.on(\"leave_room\", (data) => {\r\n      socket.emit(\"exitRoom\", true);\r\n    });\r\n\r\n    socket.on(\"is_join_room\", (is_join_room) => {\r\n      const { nickName } = this.props.player;\r\n      if (is_join_room) {\r\n        socket.emit(\"nickName\", nickName);\r\n      } else alert(\"Phòng chưa được tạo\");\r\n    });\r\n\r\n    socket.on(\"isRightNickName\", (data) => {\r\n      const { isJoinRoom } = this.props;\r\n      if (data) {\r\n        isJoinRoom(true);\r\n      } else {\r\n        alert(\r\n          \"NickName bị người khác hớt tay trên,vui lòng tạo nickName khác!!\"\r\n        );\r\n        isJoinRoom(false);\r\n      }\r\n    });\r\n\r\n    socket.on(\"newMember\", (newMember) => {\r\n      const { saveNewMember } = this.props;\r\n      saveNewMember(newMember);\r\n    });\r\n\r\n    socket.on(\"startOk\", (start) => {\r\n      const { isPlay } = this.props;\r\n      isPlay(start);\r\n    });\r\n\r\n    socket.on(\"questions\", (questions) => {\r\n      const { loadQuestions } = this.props;\r\n      loadQuestions(questions);\r\n    });\r\n\r\n    socket.on(\"numberCurrentQuestion\", (numberCurrentQuestion) => {\r\n      const { loadQuestion } = this.props;\r\n      loadQuestion(numberCurrentQuestion, false);\r\n    });\r\n\r\n    socket.on(\"hostExit\", (is_join_room) => {\r\n      const { isJoinRoom, isPlay } = this.props;\r\n      isJoinRoom(false);\r\n      isPlay(false);\r\n    });\r\n  };\r\n\r\n  show = () => {\r\n    const { questions, start, pin, nickName, isJoinRoom } = this.props.player;\r\n    if (questions !== null && start && pin && isJoinRoom) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-8 wrapper mx-auto\">\r\n            <Question />\r\n            <Img />\r\n            <Answer />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (pin && nickName && !start && isJoinRoom) {\r\n      return <Waiting />;\r\n    } else {\r\n      return <EnterPin />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.show()}</div>;\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    connectSocketIoPlayer: () => {\r\n      dispatch(actions.connectSocketIoPlayer());\r\n    },\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n    saveNewMember: (newMember) => {\r\n      dispatch(actions.saveNewMember(newMember));\r\n    },\r\n    isJoinRoom: (isJoinRoom) => {\r\n      dispatch(actions.isJoinRoom(isJoinRoom));\r\n    },\r\n    isPlay: (start) => {\r\n      dispatch(actions.isPlay(start));\r\n    },\r\n    loadQuestions: (questions) => {\r\n      dispatch(actions.loadQuestions(questions));\r\n    },\r\n    loadQuestion: (numberQuestion, disableAnswer) => {\r\n      dispatch(actions.loadQuestion(numberQuestion, disableAnswer));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Player);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\n\r\nexport class PlayGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n   \r\n    const { questions, numberCurrentQuestion,members } = this.props.host;\r\n\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion,membersBeforeTimeOut } = this.props;\r\n    membersBeforeTimeOut([...members])\r\n    setTimeQuestion(t);\r\n  \r\n    this.idTimer = setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 300);\r\n\r\n    const { socket } = this.props.host;\r\n \r\n\r\n    socket.on(\"memberAnswer\", (data) => {\r\n      const { questions, numberCurrentQuestion } = this.props.host;\r\n      const { members } = this.props.host;\r\n      const { memberAnswer } = this.props;\r\n      const score = questions[numberCurrentQuestion].score;\r\n      if (data.isRight) {\r\n        const index = members.findIndex((m) => m.id === data.id);\r\n\r\n        members[index] = {\r\n          id: members[index].id,\r\n          nickName: members[index].nickName,\r\n          rightQuestion: members[index].rightQuestion + 1,\r\n          score: members[index].score + score,\r\n        };\r\n        members.sort(function (a, b) {\r\n          if (a.score > b.score) {\r\n            return -1;\r\n          }\r\n          if (b.score > a.score) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n\r\n      memberAnswer(members);\r\n    });\r\n  }\r\n\r\n  onClick = () => {\r\n    const { numberCurrentQuestion, questions, members } = this.props.host;\r\n    const { clickNextQuestion, membersBeforeTimeOut } = this.props;\r\n    const numberQuestion = questions.length;\r\n    if (numberCurrentQuestion < numberQuestion - 1) {\r\n      var membersBefore = [...members];\r\n      membersBeforeTimeOut(membersBefore);\r\n      clickNextQuestion();\r\n    }\r\n  };\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.host;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) {\r\n      setTimeQuestion(time - 1);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    clearInterval(this.idTimer);\r\n  }\r\n\r\n  render() {\r\n    var {\r\n      numberCurrentQuestion,\r\n      questions,\r\n      numberMembersAnswer,\r\n      members,\r\n      time,\r\n      answersBackgroundColor,\r\n      membersBeforeTimeOut,\r\n    } = this.props.host;\r\n    const question = questions[numberCurrentQuestion];\r\n    const score = questions[numberCurrentQuestion].score;\r\n    const numberQuestion = questions.length;\r\n    const numberMembers = members.length;\r\n\r\n    var showMembersAfterTimeOut = members.map((member, i) => {\r\n      return (\r\n        <tbody key={i}>\r\n          <tr>\r\n            <th scope=\"row\">{(i += 1)} </th>\r\n            <td>{member.nickName}</td>\r\n            <td>{member.rightQuestion}</td>\r\n            <td>{member.score}</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    });\r\n\r\n    var showMembersBeforeTimeOut = membersBeforeTimeOut.map((member, i) => {\r\n      return (\r\n        <tbody key={i}>\r\n          <tr>\r\n            <th scope=\"row\">{(i += 1)}</th>\r\n            <td>{member.nickName}</td>\r\n            <td>{member.rightQuestion}</td>\r\n            <td>{member.score}</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    });\r\n\r\n    var show = () => {\r\n      if (time === 0) {\r\n        return showMembersAfterTimeOut;\r\n      } else {\r\n        return showMembersBeforeTimeOut;\r\n      }\r\n    };\r\n\r\n    const arr = question.answers.split('||')\r\n    const answers = arr.map((answer, index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          className={`col-10 col-sm-5 btnAnswer ${answersBackgroundColor[index]} `}\r\n        >\r\n          {answer}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = \"0\" + min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n\r\n    return (\r\n      <div className=\" row\">\r\n        <div className=\"col-12 col-lg-8 questionHost\">\r\n          <h2 className=\"question\">{question.question}</h2>\r\n          <div className=\"row\">\r\n            <div className=\"bg-dark timecountdown\">\r\n              <span className=\"pl-3 text-warning\">Time:</span>\r\n              <span className=\"pl-3 pr-3 text-white\">\r\n                {timeCountDown(time)}\r\n              </span>\r\n            </div>\r\n            <div className=\"bg-dark timecountdown\">\r\n              <span className=\"pl-3 text-warning\">Score:</span>\r\n              <span className=\"pl-3 pr-3 text-white\">{score}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"img\"></div>\r\n\r\n          <div className=\"answers\">{answers}</div>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 \">\r\n          <h1>\r\n            Câu hỏi số: {(numberCurrentQuestion += 1)} / {numberQuestion}\r\n          </h1>\r\n          <h1>\r\n            Số người trả lời:{numberMembersAnswer} /{numberMembers}\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary nextquestion\"\r\n            onClick={this.onClick}\r\n          >\r\n            Next question{\" \"}\r\n            <i className=\"fa fa-step-forward\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">STT</th>\r\n                  <th scope=\"col\">Nick Name</th>\r\n                  <th scope=\"col\">Số câu trả lời đúng</th>\r\n                  <th scope=\"col\">Điểm số</th>\r\n                </tr>\r\n              </thead>\r\n              {show()}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n \r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n    membersBeforeTimeOut: (membersBeforeTimeOut) => {\r\n      dispatch(actions.membersBeforeTimeOut(membersBeforeTimeOut));\r\n    },\r\n\r\n    clickNextQuestion: (numberCurrentQuestion) => {\r\n      dispatch(actions.clickNextQuestion(numberCurrentQuestion));\r\n    },\r\n    memberAnswer: (members) => {\r\n      dispatch(actions.memberAnswer(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PlayGame);\r\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nexport const connectSocketIoHost = () => {\r\n  return {\r\n    type: types.CONNECT_SOCKET_IO_HOST\r\n  };\r\n};\r\n\r\nexport const getQuestions = (questions) => {\r\n  return {\r\n    type: types.GET_QUESTION,\r\n    questions,\r\n  };\r\n};\r\nexport const saveNewMember = (newMember) => {\r\n  return {\r\n    type: types.SAVE_NEW_MEMBER,\r\n    newMember,\r\n  };\r\n};\r\nexport const membersBeforeTimeOut = (membersBeforeTimeOut) => {\r\n  return {\r\n    type: types.MEMBER_BEFORE_TIME_OUT,\r\n    membersBeforeTimeOut,\r\n  };\r\n};\r\nexport const clickStartGame = (startPlay) => {\r\n  return {\r\n    type: types.CLICK_START_PLAY,\r\n    startPlay,\r\n  };\r\n};\r\nexport const clickNextQuestion = (numberCurrentQuestion) => {\r\n  return {\r\n    type: types.CLICK_NEXT_QUESTION,\r\n    numberCurrentQuestion,\r\n  };\r\n};\r\n\r\nexport const memberExit = (members) => {\r\n  return {\r\n    type: types.MEMBER_EXIT,\r\n    members,\r\n  };\r\n};\r\nexport const memberAnswer = (members) => {\r\n  return {\r\n    type: types.MEMBER_ANSWER,\r\n    members,\r\n  };\r\n};\r\nexport const setTimeQuestion = (time) => {\r\n  return {\r\n    type: types.SET_TIME_QUESTION_HOST,\r\n    time,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\nimport axios from \"axios\";\r\nimport { endPointDataQuestion } from \"../../constants/endPoint\";\r\nimport music from \"./backgroundaudio.mp3\";\r\n\r\nexport class PreparePlayGame extends Component {\r\n  componentDidMount() {\r\n    //Kết nối Host với SocketIo\r\n    const { connectSocketIoHost } = this.props;\r\n    connectSocketIoHost();\r\n    //Load câu hỏi từ database lưu về state host\r\n    this.loadQuestions();\r\n\r\n    const { socket, pin } = this.props.host;\r\n\r\n    socket.emit(\"creat_room\", pin);\r\n\r\n    socket.on(\"newMember\", (newMember) => {\r\n      const { saveNewMember } = this.props;\r\n      saveNewMember(newMember);\r\n    });\r\n    \r\n\r\n    socket.on(\"memberExit\", (data) => {\r\n      var { members } = this.props.host;\r\n      let index = members.findIndex((m) => m.nickName === data);\r\n      if (index > -1) {\r\n        members.splice(index, 1);\r\n        const { memberExit } = this.props;\r\n        memberExit(members);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadQuestions = async () => {\r\n    const { getQuestions } = this.props;\r\n    const token = localStorage.getItem(\"token\");\r\n    const questions = await axios.get(endPointDataQuestion, {\r\n      headers: { \"x-access-token\": `${token}` },\r\n    });\r\n    getQuestions(questions.data);\r\n  };\r\n\r\n  onClick = async () => {\r\n    const { socket, questions } = this.props.host;\r\n    const { clickStartGame } = this.props;\r\n    socket.emit(\"start\", true);\r\n    socket.emit(\"questions\", questions);\r\n    clickStartGame(true);\r\n  };\r\n\r\n  leaveRoom = (id) => {\r\n    const { socket } = this.props.host;\r\n    socket.emit(\"leave_room\", id);\r\n  };\r\n\r\n  render() {\r\n    const { members, pin } = this.props.host;\r\n    const numberMember = members.length;\r\n    var showMembers = members.map((member, index) => {\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          key={index}\r\n          onClick={() => this.leaveRoom(member.id)}\r\n          className=\"btn btn-danger member \"\r\n        >\r\n          {member.nickName} <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"prepareplaygame\">\r\n        <audio className=\"hideAudio\" controls loop autoPlay>\r\n          <source src={music} />\r\n        </audio>\r\n        <p className=\"pin\">PIN:{pin}</p>\r\n        <div className=\"startgame\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.onClick}\r\n            className=\"btn btn-success\"\r\n          >\r\n            Start Game\r\n          </button>\r\n        </div>\r\n        <div className=\"card boxmembers\">\r\n          <h2 className=\"card-header\">Số lượng thành viên: {numberMember} </h2>\r\n          <div className=\"members\">{showMembers}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    connectSocketIoHost: () => {\r\n      dispatch(actions.connectSocketIoHost());\r\n    },\r\n    getQuestions: (questions) => {\r\n      dispatch(actions.getQuestions(questions));\r\n    },\r\n    clickStartGame: (playStart) => {\r\n      dispatch(actions.clickStartGame(playStart));\r\n    },\r\n    saveNewMember: (newMember) => {\r\n      dispatch(actions.saveNewMember(newMember));\r\n    },\r\n    memberExit: (members) => {\r\n      dispatch(actions.memberExit(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PreparePlayGame);\r\n","import React, { Component } from \"react\";\r\nimport PlayGame from \"./PlayGame\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport PreparePlayGame from \"./PreparePlayGame\";\r\nimport axios from \"axios\";\r\nimport { urlVerifyToken } from \"../../constants/endPoint\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Game.css\";\r\n\r\nexport class Game extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.checkToken();\r\n  }\r\n\r\n  checkToken = async () => {\r\n    let token = localStorage.getItem(\"token\");\r\n    const ret = await axios.post(urlVerifyToken, { token: token });\r\n    if (!ret.data) {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const { startPlay } = this.props.host;\r\n      if (startPlay) {\r\n        return <PlayGame />;\r\n      } else {\r\n        return <PreparePlayGame />;\r\n      }\r\n    } else {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStatetoProps, null)(Game));\r\n","import React, { Component } from 'react';\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               Không tìm thấy trang bạn ơi!!!!!!!!!!!!!!!!!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { urlAuthGoogle } from \"../../constants/endPoint\";\r\nimport axios from \"axios\";\r\n\r\nclass Google extends Component {\r\n  googleResponse = (response) => {\r\n    const user = {\r\n      userName: response.profileObj.googleId,\r\n      fullName: response.profileObj.name,\r\n      email: response.profileObj.email,\r\n    };\r\n    const token = response.tokenId;\r\n    axios.post(urlAuthGoogle, { user: user, token: token }).then((res) => {\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      this.props.history.push(\"/home\");\r\n    });\r\n  };\r\n\r\n  onFailure = (error) => {\r\n    console.log(error);\r\n  };\r\n  render() {\r\n    return (\r\n      <GoogleLogin\r\n        className=\"btn btn-block rounded-pill p-2 \"\r\n        clientId=\"100079736074-pk3glqm7jbtte8tbhmpghtb88es0be37.apps.googleusercontent.com\"\r\n        onSuccess={(res) => this.googleResponse(res)}\r\n        onFailure={(e) => this.onFailure(e)}\r\n      >\r\n        Sign in with Google\r\n      </GoogleLogin>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Google);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { urlAuthFacebook } from \"../../constants/endPoint\";\r\nimport axios from \"axios\";\r\n\r\nclass Facebook extends Component {\r\n  facebookResponse = async (response) => {\r\n    const user = {\r\n      userName: response.id,\r\n      fullName: response.name,\r\n      email: response.email,\r\n    };\r\n    const token = response.accessToken;\r\n    await axios\r\n      .post(urlAuthFacebook, { user: user, token: token })\r\n      .then((res) => {\r\n        console.log(res.data.token);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n\r\n        this.props.history.push(\"/home\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FacebookLogin\r\n        cssClass=\"btn btn-block text-light bg-primary mt-3\"\r\n        appId=\"336977640609639\"\r\n        autoLoad={false}\r\n        fields=\"name,email,picture\"\r\n        callback={this.facebookResponse}\r\n      />\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Facebook);\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionLogin\";\r\nimport { urlLogin } from \"../../constants/endPoint\";\r\nimport axios from \"axios\";\r\nimport Google from \"./Google\";\r\nimport Facebook from \"./Facebook\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n  onchange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    let { account } = this.props.login;\r\n    let { onChange } = this.props;\r\n    account = {\r\n      ...account,\r\n      [name]: value,\r\n    };\r\n    onChange(account);\r\n  };\r\n\r\n  onclick = () => {\r\n    const { account } = this.props.login;\r\n    axios.post(urlLogin, account).then((res) => {\r\n      if (res.data.failLogin) alert(JSON.stringify(res.data.failLogin));\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        this.props.history.push(\"/home\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    return (\r\n      <div className=\"background p-5\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"http://pluspng.com/img-png/login-button-png-login-button-png-image-18028-872.png\"\r\n                    className=\"card-img mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"inputUsername\"\r\n                      name=\"userName\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUsername\">Username</label>\r\n                  </div>\r\n\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"inputPassword\"\r\n                      name=\"passWord\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <Link\r\n                    replace\r\n                    className=\"d-block text-center mt-2 small\"\r\n                    to=\"./register\"\r\n                  >\r\n                    Register\r\n                  </Link>\r\n                  <hr className=\"mt-5\" />\r\n                  <Google />\r\n                  <Facebook />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    login: state.login,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    onChange: (account) => {\r\n      dispatch(actions.onChange(account));\r\n    },\r\n  };\r\n};\r\nexport default withRouter(connect(mapStatetoProps, mapDispathToProps)(Login));\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const onChange = account => {\r\n  return {\r\n    type: types.ON_CHANGE_LOGIN,\r\n    account\r\n  };\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionRegister\";\r\nimport { urlRegister } from \"../../constants/endPoint\";\r\nimport Google from \"./Google\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport Facebook from \"./Facebook\";\r\nclass Register extends Component {\r\n  accountInvalid = (account) => {\r\n    if (\r\n      account.userName != null &&\r\n      account.fullName != null &&\r\n      account.email != null &&\r\n      account.confirmPassword != null &&\r\n      account.passWord === account.confirmPassword\r\n    )\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  onclick = () => {\r\n    const { account } = this.props.register;\r\n    const acc = { ...account };\r\n    if (this.accountInvalid(account)) {\r\n      delete acc.confirmPassword;\r\n      axios.post(urlRegister, acc).then((res) => {\r\n        alert(res.data);\r\n      });\r\n    } else {\r\n      alert(\"Bạn phải điền đầy đủ thông tin\");\r\n    }\r\n  };\r\n  onchange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    let { account } = this.props.register;\r\n    let { onChange } = this.props;\r\n    account = {\r\n      ...account,\r\n      [name]: value,\r\n    };\r\n    onChange(account);\r\n  };\r\n\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    return (\r\n      <div className=\"background p-1\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"https://www.pngmart.com/files/3/Register-Button-Transparent-Background.png\"\r\n                    className=\"card-img  mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      id=\"inputUsername\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUsername\">Username</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"fullName\"\r\n                      id=\"inputFullname\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Full name\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputFullname\">Full name</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"inputEmail\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email address\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputEmail\">Email address</label>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"passWord\"\r\n                      id=\"inputPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"confirmPassword\"\r\n                      id=\"inputConfirmPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputConfirmPassword\">\r\n                      Confirm password\r\n                    </label>\r\n                  </div>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Register\r\n                  </button>\r\n\r\n                  <Link className=\"d-block text-center mt-2 small\" to=\"./login\">\r\n                    login\r\n                  </Link>\r\n                  <hr className=\"mt-5\" />\r\n                  <Google />\r\n                  <Facebook />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    register: state.register,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    onChange: (account) => {\r\n      dispatch(actions.onChange(account));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Register);\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const onChange = account => {\r\n  return {\r\n    type: types.ON_CHANGE_REGISTER,\r\n    account\r\n  };\r\n};","import React, { Component } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { urlVerifyToken } from \"../../constants/endPoint\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nclass Home extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.checkToken();\r\n  }\r\n\r\n  checkToken = async () => {\r\n    let token = localStorage.getItem(\"token\");\r\n    const ret = await axios.post(urlVerifyToken, { token: token });\r\n    if (!ret.data) {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  sigOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    const tokenDecode = jwtDecode(token);\r\n    const userName = tokenDecode.fullName;\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-warning bg-warning\">\r\n          <ul className=\"navbar-nav\">Home</ul>\r\n\r\n          <div className=\" dropdown ml-5\">\r\n            <div\r\n              className=\"nav-link dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"fa fa-user-circle-o fa-2x\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <div className=\"dropdown-item \">\r\n                <i className=\"fa fa-user-circle-o fa-2x\" aria-hidden=\"true\"></i>\r\n                <h5 className=\" text-danger \">Hi {userName}</h5>\r\n              </div>\r\n\r\n              <div className=\" dropdown-item \">\r\n                <Link\r\n                  className=\"d-block \"\r\n                  to=\"./login\"\r\n                  onClick={() => this.sigOut()}\r\n                >\r\n                  <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>Đăng xuất\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className=\"container \">\r\n          <Link to=\"/playgame\" target=\"_blank\">\r\n            <button type=\"button\" className=\"btn btn-success m-auto\">\r\n              Playgame\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Player from \"./components/player/Player\";\nimport Game from \"./components/host/Game\";\nimport NotFound from \"./components/notfound/NotFound\";\nimport Login from \"./components/accounts/Login\";\nimport Register from \"./components/accounts/Register\";\nimport Home from \"./components/home/Home\"\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Player />\n          </Route>\n          <Route path=\"/home\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/playgame\" exact>\n            <Game />\n          </Route>\n          <Route path=\"/login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//Stort\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport myReducer from \"./reducers/index\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(myReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/backgroundaudio.249424ec.mp3\";"],"sourceRoot":""}