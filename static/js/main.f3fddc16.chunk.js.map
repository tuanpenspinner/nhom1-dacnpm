{"version":3,"sources":["const.js","reducers/player.reducer.js","constants/ActionTypes.js","reducers/host.reducer.js","reducers/index.js","actions/actionPlayer.js","components/player/Answer.js","components/player/Questions.js","components/player/Img.js","components/player/EnterPin.js","components/player/Waiting.js","components/player/Player.js","components/host/PlayGame.js","actions/actionHost.js","components/host/PreparePlayGame.js","components/host/Game.js","components/notfound/NotFound.js","components/accounts/Login.js","components/accounts/Register.js","App.js","serviceWorker.js","index.js","components/host/backgroundaudio.mp3"],"names":["endPoint","intialState","socket","openSocket","rememberUpgrade","transports","secure","rejectUnauthorized","questions","numberCurrentQuestion","score","start","nickName","pin","arrRoom","isJoinRoom","disableAnswer","time","answersColor","answersBackgroundColor","myReducer","state","action","type","emit","timeAnswer","rightAnswer","initState","Math","floor","random","startPlay","numberMembersAnswer","members","push","newMember","combineReducers","player","host","setTimeQuestion","Answer","onClick","index","props","clickAnswer","this","question","arr","answer1","answer2","answer3","answer4","answers","map","answer","key","disabled","className","Component","connect","dispatch","actions","Questions","timeCountDown","idTimer","t","setInterval","clearInterval","sec","Img","EnterPin","document","getElementById","value","clickSubmitPin","parseInt","onSubmit","e","preventDefault","method","id","placeholder","Waiting","role","Player","componentDidMount","on","is_join_room","isPlay","loadQuestions","loadQuestion","show","numberQuestion","PlayGame","clickNextQuestion","length","data","memberAnswer","isRight","findIndex","m","rightQuestion","sort","a","b","numberMembers","showMembers","member","i","scope","aria-hidden","PreparePlayGame","clickStartGame","axios","get","saveNewMember","splice","memberExit","numberMember","controls","loop","autoPlay","src","music","playStart","Game","NotFound","Login","alt","name","autoFocus","onChange","onchange","htmlFor","onclick","to","Register","App","path","exact","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f3fddc16.chunk.js","sourcesContent":["export const endPoint = `https://dacnpm-nhom1.herokuapp.com/`;\r\nexport const endPointDataQuestion = `https://dacnpm-nhom1.herokuapp.com/getdata`;\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../const\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\nvar socket = openSocket(endPoint, options);\r\n\r\nvar intialState = {\r\n  socket: socket,\r\n  questions: null,\r\n  numberCurrentQuestion: 0,\r\n  score: 0,\r\n  start: false,\r\n  nickName: \"\",\r\n  pin: \"\",\r\n  arrRoom: [],\r\n  isJoinRoom: false,\r\n  disableAnswer: false,\r\n  time: 0,\r\n  answersColor: [\"\", \"\", \"\", \"\"],\r\n  answersBackgroundColor: [\"\", \"\", \"\", \"\"],\r\n};\r\n\r\nvar myReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case types.CLICK_SUBMIT_PIN: {\r\n      state.socket.emit(\"join_room\", action.pin);\r\n      state.socket.emit(\"nickName\", action.nickName);\r\n      state.pin = action.pin;\r\n      state.nickName = action.nickName;\r\n\r\n      return { ...state };\r\n    }\r\n    case types.IS_JOIN_ROOM: {\r\n      state.isJoinRoom = action.isJoinRoom;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.IS_PLAY: {\r\n      state.start = action.start;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTIONS: {\r\n      state.questions = action.questions;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTION: {\r\n      state.disableAnswer = false;\r\n      state.answersColor = [\"\", \"\", \"\", \"\"];\r\n      state.answersBackgroundColor = [\"\", \"\", \"\", \"\"];\r\n      state.numberCurrentQuestion = action.numberCurrentQuestion;\r\n      if (state.questions)\r\n        state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_ANSWER: {\r\n      state.disableAnswer = action.disableAnswer;\r\n      state.answersColor = action.answersColor;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION_PLAYER: {\r\n      state.time = action.time;\r\n\r\n      if (state.time === 0) {\r\n        var rightAnswer =\r\n          state.questions[state.numberCurrentQuestion].rightAnswer;\r\n        state.answersBackgroundColor[rightAnswer - 1] = \"bg-success\";\r\n        state.disableAnswer = true;\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","//Player Actions\r\nexport const CLICK_SUBMIT_PIN = \"CLICK_SUBMIT_PIN\";\r\nexport const IS_JOIN_ROOM = \"IS_JOIN_ROOM\";\r\nexport const IS_PLAY = \"IS_PLAY\";\r\nexport const LOAD_QUESTIONS = \"LOAD_QUESTIONS\";\r\nexport const LOAD_QUESTION = \"LOAD_QUESTION\";\r\nexport const CLICK_ANSWER = \"CLICK_ANSWER\";\r\nexport const SET_TIME_QUESTION_PLAYER=\"SET_TIME_QUESTION_PLAYER\"\r\n//Host Actions\r\nexport const SAVE_NEW_MEMBER = \"SAVE_NEW_MEMBER\";\r\nexport const CLICK_START_PLAY = \"CLICK_START_PLAY\";\r\nexport const CLICK_NEXT_QUESTION=\"CLICK_NEXT_QUESTION\"\r\nexport const MEMBER_EXIT=\"MEMBER_EXIT\"\r\nexport const MEMBER_ANSWER=\"MEMBER_ANSWER\"\r\nexport const SET_TIME_QUESTION_HOST=\"SET_TIME_QUESTION_HOST\"\r\n\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../const\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\nvar socket = openSocket(endPoint, options);\r\n\r\nvar initState = {\r\n  socket: socket,\r\n  pin: Math.floor(Math.random() * 10000) + 1,\r\n  startPlay: false,\r\n  questions: [],\r\n  numberMembersAnswer: 0,\r\n  members: [],\r\n  numberCurrentQuestion: 0,\r\n  time: 0,\r\n  answersBackgroundColor: [\"\", \"\", \"\", \"\"],\r\n};\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_NEW_MEMBER: {\r\n      state.members.push(action.newMember);\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_START_PLAY: {\r\n      state.startPlay = action.startPlay;\r\n      state.questions = [...action.questions];\r\n      return { ...state };\r\n    }\r\n\r\n    case types.CLICK_NEXT_QUESTION: {\r\n      state.socket.emit(\"next\", 1);\r\n      state.numberCurrentQuestion += 1;\r\n      state.answersBackgroundColor = [\"\", \"\", \"\", \"\"];\r\n      state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      state.numberMembersAnswer = 0;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_EXIT: {\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_ANSWER: {\r\n      state.numberMembersAnswer += 1;\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION_HOST: {\r\n      state.time = action.time;\r\n      if (state.time === 0) {\r\n        var rightAnswer =\r\n          state.questions[state.numberCurrentQuestion].rightAnswer;\r\n        state.answersBackgroundColor[rightAnswer - 1] = \"bg-success\";\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import {combineReducers} from \"redux\";\r\nimport player from \"./player.reducer\"\r\nimport host from \"./host.reducer\"\r\n\r\nconst myReducer =combineReducers({\r\n    player,\r\n    host\r\n})\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\"\r\n\r\nexport const submitPIN = (nickName,pin)=>{\r\n    return{\r\n        type:types.CLICK_SUBMIT_PIN,\r\n        nickName,\r\n        pin\r\n    }\r\n}\r\n\r\nexport const isJoinRoom = (isJoinRoom)=>{\r\n    return{\r\n        type:types.IS_JOIN_ROOM,\r\n        isJoinRoom\r\n    }\r\n}\r\n\r\nexport const isPlay = (start)=>{\r\n    return{\r\n        type:types.IS_PLAY,\r\n        start\r\n    }\r\n}\r\nexport const loadQuestions = (questions)=>{\r\n    return{\r\n        type:types.LOAD_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\nexport const loadQuestion = (numberCurrentQuestion,disableAnswer)=>{\r\n    return{\r\n        type:types.LOAD_QUESTION,\r\n        numberCurrentQuestion,\r\n        disableAnswer\r\n    }\r\n}\r\nexport const clickAnswer = (disableAnswer,answersColor)=>{\r\n    return{\r\n        type:types.CLICK_ANSWER,\r\n        disableAnswer,\r\n        answersColor \r\n    }\r\n}\r\nexport const setTimeQuestion = (time) => {\r\n    return {\r\n      type: types.SET_TIME_QUESTION_PLAYER,\r\n      time\r\n    };\r\n  };\r\n  \r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Answer extends Component {\r\n  onClick = (index) => {\r\n    const { socket, questions, numberCurrentQuestion } = this.props.player;\r\n    const { clickAnswer } = this.props;\r\n    const rightAnswer = questions[numberCurrentQuestion].rightAnswer;\r\n    var {answersColor}=this.props.player;\r\n    answersColor[index]='text-danger';\r\n\r\n    clickAnswer(true,answersColor);\r\n    if (index===rightAnswer-1) {\r\n      socket.emit(\"memberAnswer\", true);\r\n    } else {\r\n      socket.emit(\"memberAnswer\", false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      numberCurrentQuestion,\r\n      disableAnswer,\r\n      answersColor,\r\n      answersBackgroundColor\r\n    } = this.props.player;\r\n    const question = questions[numberCurrentQuestion];\r\n    const arr = [];\r\n    arr.push(question.answer1);\r\n    arr.push(question.answer2);\r\n    arr.push(question.answer3);\r\n    arr.push(question.answer4);\r\n\r\n    const answers = arr.map(( answer,index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          onClick={() => this.onClick(index)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className={ `col-10 col-sm-5 btnAnswer ${answersColor[index]}  ${answersBackgroundColor[index]} `}\r\n        >\r\n          {answer}\r\n        </button>\r\n      );\r\n    });\r\n    return <div className=\"answers \">{answers}</div>;\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickAnswer: (disableAnswer,answersColor) => {\r\n      dispatch(actions.clickAnswer(disableAnswer,answersColor));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Answer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\n\r\nexport class Questions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.player;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer= setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 300);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.idTimer)\r\n  }\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.player;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) setTimeQuestion(time - 1);\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { questions, numberCurrentQuestion, time } = this.props.player;\r\n    const question = questions[numberCurrentQuestion].question;\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n    return (\r\n      <div>\r\n        <h2 className=\"question\">{question}</h2>\r\n        <div className=\"bg-dark timecountdown\">\r\n          <span className=\"pl-3 text-warning\">Time:</span>\r\n          <span className=\"pl-3 pr-3 text-white\">{timeCountDown(time)}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    }\r\n    \r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Questions);\r\n","import React, { Component } from 'react';\r\n\r\nexport class Img extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"img\">\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Img;\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport * as actions from \"../../actions/actionPlayer\"\r\n\r\nimport './EnterPin.css'\r\n\r\nexport class EnterPin extends Component {\r\n  onClick = () => {\r\n    var nickName = document.getElementById(\"nickName\").value;\r\n    var pin = document.getElementById(\"pin\").value;\r\n    const { clickSubmitPin } = this.props;\r\n    clickSubmitPin(nickName, parseInt(pin));\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"enterpin\">\r\n        <form\r\n          onSubmit={function(e) {\r\n            e.preventDefault();\r\n          }}\r\n          method=\"POST\"\r\n          className=\"formEnterpin\"\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"nickName\"\r\n              placeholder=\"Nick Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"pin\"\r\n              placeholder=\"PIN\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.onClick()}\r\n          >\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps=(state)=>{\r\n  return{\r\n    player:state.player\r\n  }\r\n}\r\n\r\nconst mapDispathToProps=(dispatch,props)=>{\r\n  return({\r\n    clickSubmitPin:(nickName,pin)=>{\r\n      dispatch(actions.submitPIN(nickName,pin))\r\n    }\r\n  })\r\n}\r\nexport default connect(mapStatetoProps,mapDispathToProps) (EnterPin);\r\n","import React, { Component } from \"react\";\r\n\r\n//...\r\n\r\nimport \"./Waiting.css\";\r\n\r\nclass Waiting extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"waiting row \">\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n        <h1 className=\"text-danger\">Đợi chủ trò bắt đầu trò chơi</h1>\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Waiting;\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\nimport Answer from \"./Answer\";\r\nimport Question from \"./Questions\";\r\nimport Img from \"./Img\";\r\nimport EnterPin from \"./EnterPin\";\r\nimport Waiting from \"./Waiting\";\r\nimport \"./Player.css\";\r\n\r\nexport class Player extends Component {\r\n  componentDidMount = () => {\r\n    const { socket } = this.props.player;\r\n\r\n    socket.on(\"is_join_room\", (is_join_room) => {\r\n      const { isJoinRoom } = this.props;\r\n      isJoinRoom(is_join_room);\r\n    });\r\n\r\n    socket.on(\"startOk\", (start) => {\r\n      const { isPlay } = this.props;\r\n      isPlay(start);\r\n    });\r\n\r\n    socket.on(\"questions\", (questions) => {\r\n      const { loadQuestions } = this.props;\r\n      loadQuestions(questions);\r\n    });\r\n\r\n    socket.on(\"numberCurrentQuestion\", (numberCurrentQuestion) => {\r\n      const { loadQuestion } = this.props;\r\n      loadQuestion(numberCurrentQuestion, false);\r\n    });\r\n  };\r\n\r\n  show = () => {\r\n    const { questions, start, pin, nickName, isJoinRoom } = this.props.player;\r\n\r\n    if (questions !== null && start && pin && isJoinRoom) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-8 wrapper mx-auto\">\r\n            <Question />\r\n            <Img />\r\n            <Answer />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (pin && nickName && !start && isJoinRoom) {\r\n      return <Waiting />;\r\n    } else {\r\n      return <EnterPin />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.show()}</div>;\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n    isJoinRoom: (isJoinRoom) => {\r\n      dispatch(actions.isJoinRoom(isJoinRoom));\r\n    },\r\n    isPlay: (start) => {\r\n      dispatch(actions.isPlay(start));\r\n    },\r\n    loadQuestions: (questions) => {\r\n      dispatch(actions.loadQuestions(questions));\r\n    },\r\n    loadQuestion: (numberQuestion, disableAnswer) => {\r\n      dispatch(actions.loadQuestion(numberQuestion, disableAnswer));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Player);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\n\r\nexport class PlayGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.host;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer = setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 300);\r\n\r\n    const { socket } = this.props.host;\r\n    socket.on(\"memberAnswer\", (data) => {\r\n      const { questions, numberCurrentQuestion } = this.props.host;\r\n      const { members } = this.props.host;\r\n      const { memberAnswer } = this.props;\r\n      const score = questions[numberCurrentQuestion].score;\r\n      if (data.isRight) {\r\n        const index = members.findIndex((m) => m.id === data.id);\r\n\r\n        members[index] = {\r\n          id: members[index].id,\r\n          nickName: members[index].nickName,\r\n          rightQuestion: members[index].rightQuestion + 1,\r\n          score: members[index].score + score,\r\n        };\r\n        members.sort(function (a, b) {\r\n          if (a.score > b.score) {\r\n            return -1;\r\n          }\r\n          if (b.score > a.score) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      memberAnswer(members);\r\n    });\r\n  }\r\n\r\n  onClick = () => {\r\n    const { numberCurrentQuestion, questions } = this.props.host;\r\n    const { clickNextQuestion } = this.props;\r\n    const numberQuestion = questions.length;\r\n    if (numberCurrentQuestion < numberQuestion - 1) clickNextQuestion();\r\n  };\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.host;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) {\r\n      setTimeQuestion(time - 1);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    clearInterval(this.idTimer);\r\n  }\r\n\r\n  render() {\r\n    var {\r\n      numberCurrentQuestion,\r\n      questions,\r\n      numberMembersAnswer,\r\n      members,\r\n      time,\r\n      answersBackgroundColor,\r\n    } = this.props.host;\r\n    const question = questions[numberCurrentQuestion];\r\n    const score = questions[numberCurrentQuestion].score;\r\n    const numberQuestion = questions.length;\r\n    const numberMembers = members.length;\r\n\r\n    var showMembers = members.map((member, i) => {\r\n      return (\r\n        <tbody key={i}>\r\n          <tr>\r\n            <th scope=\"row\">{(i += 1)}</th>\r\n            <td>{member.nickName}</td>\r\n            <td>{member.rightQuestion}</td>\r\n            <td>{member.score}</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    });\r\n    const arr = [];\r\n    arr.push(question.answer1);\r\n    arr.push(question.answer2);\r\n    arr.push(question.answer3);\r\n    arr.push(question.answer4);\r\n\r\n    const answers = arr.map((answer, index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          className={`col-10 col-sm-5 btnAnswer ${answersBackgroundColor[index]} `}\r\n        >\r\n          {answer}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n\r\n    return (\r\n      <div className=\" row\">\r\n        <div className=\"col-12 col-lg-8 questionHost\">\r\n          <h2 className=\"question\">{question.question}</h2>\r\n          <div className=\"row\">\r\n            <div className=\"bg-dark timecountdown\">\r\n              <span className=\"pl-3 text-warning\">Time:</span>\r\n              <span className=\"pl-3 pr-3 text-white\">\r\n                {timeCountDown(time)}\r\n              </span>\r\n            </div>\r\n            <div className=\"bg-dark timecountdown\">\r\n              <span className=\"pl-3 text-warning\">Score:</span>\r\n              <span className=\"pl-3 pr-3 text-white\">{score}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"img\"></div>\r\n\r\n          <div className=\"answers\">{answers}</div>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 \">\r\n          <h1>\r\n            Câu hỏi số: {(numberCurrentQuestion += 1)} / {numberQuestion}\r\n          </h1>\r\n          <h1>\r\n            Số người trả lời:{numberMembersAnswer} /{numberMembers}\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary nextquestion\"\r\n            onClick={this.onClick}\r\n          >\r\n            Next question{\" \"}\r\n            <i className=\"fa fa-step-forward\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">STT</th>\r\n                  <th scope=\"col\">Nick Name</th>\r\n                  <th scope=\"col\">Số câu trả lời đúng</th>\r\n                  <th scope=\"col\">Điểm số</th>\r\n                </tr>\r\n              </thead>\r\n              {showMembers}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n\r\n    clickNextQuestion: (numberCurrentQuestion) => {\r\n      dispatch(actions.clickNextQuestion(numberCurrentQuestion));\r\n    },\r\n    memberAnswer: (members) => {\r\n      dispatch(actions.memberAnswer(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PlayGame);\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const saveNewMember = newMember => {\r\n  return {\r\n    type: types.SAVE_NEW_MEMBER,\r\n    newMember\r\n  };\r\n};\r\nexport const clickStartGame = (startPlay, questions) => {\r\n  return {\r\n    type: types.CLICK_START_PLAY,\r\n    startPlay,\r\n    questions\r\n  };\r\n};\r\nexport const clickNextQuestion = numberCurrentQuestion => {\r\n  return {\r\n    type: types.CLICK_NEXT_QUESTION,\r\n    numberCurrentQuestion\r\n  };\r\n};\r\n\r\nexport const memberExit = members => {\r\n  return {\r\n    type: types.MEMBER_EXIT,\r\n    members\r\n  };\r\n};\r\nexport const memberAnswer = (members) => {\r\n  return {\r\n    type: types.MEMBER_ANSWER,\r\n    members,\r\n  };\r\n};\r\nexport const setTimeQuestion = (time) => {\r\n  return {\r\n    type: types.SET_TIME_QUESTION_HOST,\r\n    time\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\nimport axios from \"axios\";\r\nimport { endPointDataQuestion } from \"../../const\";\r\nimport music from \"./backgroundaudio.mp3\"\r\n\r\nexport class PreparePlayGame extends Component {\r\n  componentDidMount() {\r\n    const { socket, pin } = this.props.host;\r\n\r\n    socket.emit(\"creat_room\", pin);\r\n\r\n    socket.on(\"newMember\", (newMember) => {\r\n      const { saveNewMember } = this.props;\r\n      saveNewMember(newMember);\r\n    });\r\n\r\n    socket.on(\"memberExit\", (data) => {\r\n      var { members } = this.props.host;\r\n      const index = members.findIndex((m) => m.id === data.id);\r\n      members.splice(index, 1);\r\n      const { memberExit } = this.props;\r\n      memberExit(members);\r\n    });\r\n  }\r\n\r\n  onClick = async () => {\r\n    const { socket } = this.props.host;\r\n    const { clickStartGame } = this.props;\r\n    socket.emit(\"start\", true);\r\n    const questions = await axios.get(endPointDataQuestion);\r\n    socket.emit(\"questions\", questions.data);\r\n    clickStartGame(true, questions.data);\r\n  };\r\n  render() {\r\n    const { members, pin } = this.props.host;\r\n    const numberMember = members.length;\r\n    var showMembers = members.map((member, index) => {\r\n      return (\r\n        <button type=\"button\" key={index} className=\"btn btn-danger member \">\r\n          {member.nickName} <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"prepareplaygame\">\r\n        <audio className=\"hideAudio\" controls loop autoPlay>\r\n          <source src={music} />\r\n        </audio>\r\n        <p className=\"pin\">PIN:{pin}</p>\r\n        <div className=\"startgame\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.onClick}\r\n            className=\"btn btn-success\"\r\n          >\r\n            Start Game\r\n          </button>\r\n        </div>\r\n        <div className=\"card boxmembers\">\r\n          <h2 className=\"card-header\">Số lượng thành viên: {numberMember} </h2>\r\n          <div className=\"members\">{showMembers}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickStartGame: (playStart, questions) => {\r\n      dispatch(actions.clickStartGame(playStart, questions));\r\n    },\r\n    saveNewMember: (newMember) => {\r\n      dispatch(actions.saveNewMember(newMember));\r\n    },\r\n    memberExit: (members) => {\r\n      dispatch(actions.memberExit(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PreparePlayGame);\r\n","import React, { Component } from \"react\";\r\nimport PlayGame from \"./PlayGame\";\r\nimport PreparePlayGame from \"./PreparePlayGame\";\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Game.css\";\r\n\r\nexport class Game extends Component {\r\n  \r\n  render() {\r\n    const { startPlay } = this.props.host;\r\n    if (startPlay) {\r\n      return <PlayGame />;\r\n    } else {\r\n      return <PreparePlayGame />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    host: state.host\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStatetoProps, null)(Game);\r\n","import React, { Component } from 'react';\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               Không tìm thấy trang bạn ơi!!!!!!!!!!!!!!!!!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"background p-5\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"http://pluspng.com/img-png/login-button-png-login-button-png-image-18028-872.png\"\r\n                    className=\"card-img mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"inputUserame\"\r\n                      name=\"username\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUserame\">Username</label>\r\n                  </div>\r\n\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"inputPassword\"\r\n                      name=\"password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <Link\r\n                    className=\"d-block text-center mt-2 small\"\r\n                    to=\"./register\"\r\n                  >\r\n                    Register\r\n                  </Link>\r\n                  <hr className=\"mt-5\" />\r\n                  <button\r\n                    className=\"btn btn-lg btn-google btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab mr-2\"></i> Sign in with Google\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-facebook btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab fa-facebook-f mr-2\"></i> Sign in with\r\n                    Facebook\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"background p-1\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"https://lh3.googleusercontent.com/proxy/2yUY8bRd1oKOJgSpD5uCEOuYIOlIFWkTdlubvxfJ5K7v-9sW6Idy0aCdaAd8OQhvsgvCERwz7SAAGFFDAyqNmTiMhtKgdka-TYrK_3IXsuVeIQK0-ZlOYSJ9dF9SIH_WRA\"\r\n                    className=\"card-img  mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      id=\"inputUsername\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUsername\">Username</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"fullname\"\r\n                      id=\"inputFullname\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Full name\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputFullname\">Full name</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"inputEmail\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email address\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputEmail\">Email address</label>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"inputPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"confirmpassword\"\r\n                      id=\"inputConfirmPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputConfirmPassword\">\r\n                      Confirm password\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <Link className=\"d-block text-center mt-2 small\" to=\"./login\">\r\n                    login\r\n                  </Link>\r\n                  <hr className=\"mt-2\" />\r\n                  <button\r\n                    className=\"btn btn-lg btn-google btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab mr-2\"></i> Sign in with Google\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-lg btn-facebook btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab  mr-2\"></i> Sign in with Facebook\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport { HashRouter   as Router, Route, Switch } from \"react-router-dom\";\n\nimport Player from \"./components/player/Player\";\nimport Game from \"./components/host/Game\";\nimport NotFound from \"./components/notfound/NotFound\";\nimport Login from \"./components/accounts/Login\";\nimport Register from \"./components/accounts/Register\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Player />\n          </Route>\n          <Route path=\"/playgame\" exact>\n            <Game />\n          </Route>\n          <Route path=\"/account/login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/account/register\" exact>\n            <Register />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n        \n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//Stort\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport myReducer from \"./reducers/index\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(myReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/backgroundaudio.249424ec.mp3\";"],"sourceRoot":""}