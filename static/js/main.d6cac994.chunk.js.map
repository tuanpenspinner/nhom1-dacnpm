{"version":3,"sources":["constants/endPoint.js","reducers/player.reducer.js","constants/ActionTypes.js","reducers/host.reducer.js","reducers/register.reducer.js","reducers/login.reducer.js","reducers/index.js","actions/actionPlayer.js","components/player/Answer.js","components/player/Questions.js","components/player/Img.js","components/player/EnterPin.js","components/player/Waiting.js","components/player/Player.js","components/host/PlayGame.js","actions/actionHost.js","components/host/PreparePlayGame.js","components/host/Game.js","components/notfound/NotFound.js","components/accounts/Login.js","actions/actionLogin.js","components/accounts/Register.js","actions/actionRegister.js","App.js","serviceWorker.js","index.js","components/host/backgroundaudio.mp3"],"names":["url","endPoint","endPointDataQuestion","urlLogin","urlRegister","urlVerifyToken","initState","socket","openSocket","rememberUpgrade","transports","secure","rejectUnauthorized","questions","numberCurrentQuestion","score","start","nickName","pin","arrRoom","isJoinRoom","disableAnswer","time","answersColor","answersBackgroundColor","myReducer","state","action","type","emit","timeAnswer","rightAnswer","Math","floor","random","startPlay","numberMembersAnswer","members","push","newMember","account","userName","fullName","email","passWord","confirmPassword","combineReducers","player","host","login","register","setTimeQuestion","Answer","onClick","index","props","clickAnswer","this","question","arr","answer1","answer2","answer3","answer4","answers","map","answer","key","disabled","className","Component","connect","dispatch","actions","Questions","timeCountDown","idTimer","t","setInterval","clearInterval","sec","Img","EnterPin","document","getElementById","value","clickSubmitPin","parseInt","onSubmit","e","preventDefault","method","id","placeholder","Waiting","role","Player","componentDidMount","on","is_join_room","isPlay","loadQuestions","loadQuestion","show","numberQuestion","PlayGame","clickNextQuestion","length","data","memberAnswer","isRight","findIndex","m","rightQuestion","sort","a","b","numberMembers","showMembers","member","i","scope","aria-hidden","PreparePlayGame","clickStartGame","token","localStorage","getItem","axios","get","headers","saveNewMember","splice","memberExit","numberMember","controls","loop","autoPlay","src","music","playStart","Game","checkToken","post","removeItem","history","window","location","reload","to","withRouter","NotFound","Login","onchange","name","target","onChange","onclick","then","res","failLogin","alert","JSON","stringify","setItem","alt","autoFocus","htmlFor","Register","accountInvalid","acc","App","path","exact","Boolean","hostname","match","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d6cac994.chunk.js","sourcesContent":["const url = `https://dacnpm-nhom1.herokuapp.com`;\r\nexport const endPoint = url;\r\nexport const endPointDataQuestion = `${url}/api/questions`;\r\nexport const urlLogin = `${url}/api/account/login`;\r\nexport const urlRegister = `${url}/api/account/register`;\r\nexport const urlVerifyToken = `${url}/api/account/verify`;\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../constants/endPoint\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\nvar socket = openSocket(endPoint, options);\r\n\r\nvar initState = {\r\n  socket: socket,\r\n  questions: null,\r\n  numberCurrentQuestion: 0,\r\n  score: 0,\r\n  start: false,\r\n  nickName: \"\",\r\n  pin: \"\",\r\n  arrRoom: [],\r\n  isJoinRoom: false,\r\n  disableAnswer: false,\r\n  time: 0,\r\n  answersColor: [\"\", \"\", \"\", \"\"],\r\n  answersBackgroundColor: [\"\", \"\", \"\", \"\"],\r\n};\r\n\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.CLICK_SUBMIT_PIN: {\r\n      state.socket.emit(\"join_room\", action.pin);\r\n      state.socket.emit(\"nickName\", action.nickName);\r\n      state.pin = action.pin;\r\n      state.nickName = action.nickName;\r\n\r\n      return { ...state };\r\n    }\r\n    case types.IS_JOIN_ROOM: {\r\n      state.isJoinRoom = action.isJoinRoom;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.IS_PLAY: {\r\n      state.start = action.start;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTIONS: {\r\n      state.questions = action.questions;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTION: {\r\n      state.disableAnswer = false;\r\n      state.answersColor = [\"\", \"\", \"\", \"\"];\r\n      state.answersBackgroundColor = [\"\", \"\", \"\", \"\"];\r\n      state.numberCurrentQuestion = action.numberCurrentQuestion;\r\n      if (state.questions)\r\n        state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_ANSWER: {\r\n      state.disableAnswer = action.disableAnswer;\r\n      state.answersColor = action.answersColor;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION_PLAYER: {\r\n      state.time = action.time;\r\n\r\n      if (state.time === 0) {\r\n        var rightAnswer =\r\n          state.questions[state.numberCurrentQuestion].rightAnswer;\r\n        state.answersBackgroundColor[rightAnswer - 1] = \"bg-success\";\r\n        state.disableAnswer = true;\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","//Player Actions\r\nexport const CLICK_SUBMIT_PIN = \"CLICK_SUBMIT_PIN\";\r\nexport const IS_JOIN_ROOM = \"IS_JOIN_ROOM\";\r\nexport const IS_PLAY = \"IS_PLAY\";\r\nexport const LOAD_QUESTIONS = \"LOAD_QUESTIONS\";\r\nexport const LOAD_QUESTION = \"LOAD_QUESTION\";\r\nexport const CLICK_ANSWER = \"CLICK_ANSWER\";\r\nexport const SET_TIME_QUESTION_PLAYER = \"SET_TIME_QUESTION_PLAYER\";\r\n//Host Actions\r\nexport const SAVE_NEW_MEMBER = \"SAVE_NEW_MEMBER\";\r\nexport const CLICK_START_PLAY = \"CLICK_START_PLAY\";\r\nexport const CLICK_NEXT_QUESTION = \"CLICK_NEXT_QUESTION\";\r\nexport const MEMBER_EXIT = \"MEMBER_EXIT\";\r\nexport const MEMBER_ANSWER = \"MEMBER_ANSWER\";\r\nexport const SET_TIME_QUESTION_HOST = \"SET_TIME_QUESTION_HOST\";\r\n//Login Actions\r\nexport const ON_CHANGE_LOGIN = \"ON_CHANGE_LOGIN\";\r\n//Register Actions\r\nexport const ON_CHANGE_REGISTER = \"ON_CHANGE_REGISTER\";\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../constants/endPoint\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\nvar socket = openSocket(endPoint, options);\r\n\r\nvar initState = {\r\n  socket: socket,\r\n  pin: Math.floor(Math.random() * 10000) + 1,\r\n  startPlay: false,\r\n  questions: [],\r\n  numberMembersAnswer: 0,\r\n  members: [],\r\n  numberCurrentQuestion: 0,\r\n  time: 0,\r\n  answersBackgroundColor: [\"\", \"\", \"\", \"\"],\r\n};\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_NEW_MEMBER: {\r\n      state.members.push(action.newMember);\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_START_PLAY: {\r\n      state.startPlay = action.startPlay;\r\n      state.questions = [...action.questions];\r\n      return { ...state };\r\n    }\r\n\r\n    case types.CLICK_NEXT_QUESTION: {\r\n      state.socket.emit(\"next\", 1);\r\n      state.numberCurrentQuestion += 1;\r\n      state.answersBackgroundColor = [\"\", \"\", \"\", \"\"];\r\n      state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      state.numberMembersAnswer = 0;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_EXIT: {\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_ANSWER: {\r\n      state.numberMembersAnswer += 1;\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION_HOST: {\r\n      state.time = action.time;\r\n      if (state.time === 0) {\r\n        var rightAnswer =\r\n          state.questions[state.numberCurrentQuestion].rightAnswer;\r\n        state.answersBackgroundColor[rightAnswer - 1] = \"bg-success\";\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initState = {\r\n    account:{\r\n      userName:null,\r\n      fullName:null,\r\n      email:null,\r\n      passWord:null,\r\n      confirmPassword:null\r\n    }\r\n};\r\n\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.ON_CHANGE_REGISTER: {\r\n      state.account=action.account;\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initState = {\r\n    account:null\r\n};\r\n\r\nvar myReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case types.ON_CHANGE_LOGIN: {\r\n      state.account=action.account\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import {combineReducers} from \"redux\";\r\nimport player from \"./player.reducer\"\r\nimport host from \"./host.reducer\"\r\nimport register from \"./register.reducer\";\r\nimport login from \"./login.reducer\"\r\n\r\nconst myReducer =combineReducers({\r\n    player,\r\n    host,\r\n    login,\r\n    register\r\n})\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\"\r\n\r\nexport const submitPIN = (nickName,pin)=>{\r\n    return{\r\n        type:types.CLICK_SUBMIT_PIN,\r\n        nickName,\r\n        pin\r\n    }\r\n}\r\n\r\nexport const isJoinRoom = (isJoinRoom)=>{\r\n    return{\r\n        type:types.IS_JOIN_ROOM,\r\n        isJoinRoom\r\n    }\r\n}\r\n\r\nexport const isPlay = (start)=>{\r\n    return{\r\n        type:types.IS_PLAY,\r\n        start\r\n    }\r\n}\r\nexport const loadQuestions = (questions)=>{\r\n    return{\r\n        type:types.LOAD_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\nexport const loadQuestion = (numberCurrentQuestion,disableAnswer)=>{\r\n    return{\r\n        type:types.LOAD_QUESTION,\r\n        numberCurrentQuestion,\r\n        disableAnswer\r\n    }\r\n}\r\nexport const clickAnswer = (disableAnswer,answersColor)=>{\r\n    return{\r\n        type:types.CLICK_ANSWER,\r\n        disableAnswer,\r\n        answersColor \r\n    }\r\n}\r\nexport const setTimeQuestion = (time) => {\r\n    return {\r\n      type: types.SET_TIME_QUESTION_PLAYER,\r\n      time\r\n    };\r\n  };\r\n  \r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Answer extends Component {\r\n  onClick = (index) => {\r\n    const { socket, questions, numberCurrentQuestion } = this.props.player;\r\n    const { clickAnswer } = this.props;\r\n    const rightAnswer = questions[numberCurrentQuestion].rightAnswer;\r\n    var {answersColor}=this.props.player;\r\n    answersColor[index]='text-danger';\r\n\r\n    clickAnswer(true,answersColor);\r\n    if (index===rightAnswer-1) {\r\n      socket.emit(\"memberAnswer\", true);\r\n    } else {\r\n      socket.emit(\"memberAnswer\", false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      numberCurrentQuestion,\r\n      disableAnswer,\r\n      answersColor,\r\n      answersBackgroundColor\r\n    } = this.props.player;\r\n    const question = questions[numberCurrentQuestion];\r\n    const arr = [];\r\n    arr.push(question.answer1);\r\n    arr.push(question.answer2);\r\n    arr.push(question.answer3);\r\n    arr.push(question.answer4);\r\n\r\n    const answers = arr.map(( answer,index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          onClick={() => this.onClick(index)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className={ `col-10 col-sm-5 btnAnswer ${answersColor[index]}  ${answersBackgroundColor[index]} `}\r\n        >\r\n          {answer}\r\n        </button>\r\n      );\r\n    });\r\n    return <div className=\"answers \">{answers}</div>;\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickAnswer: (disableAnswer,answersColor) => {\r\n      dispatch(actions.clickAnswer(disableAnswer,answersColor));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Answer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\n\r\nexport class Questions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.player;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer= setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 300);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.idTimer)\r\n  }\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.player;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) setTimeQuestion(time - 1);\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { questions, numberCurrentQuestion, time } = this.props.player;\r\n    const question = questions[numberCurrentQuestion].question;\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n    return (\r\n      <div>\r\n        <h2 className=\"question\">{question}</h2>\r\n        <div className=\"bg-dark timecountdown\">\r\n          <span className=\"pl-3 text-warning\">Time:</span>\r\n          <span className=\"pl-3 pr-3 text-white\">{timeCountDown(time)}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    }\r\n    \r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Questions);\r\n","import React, { Component } from 'react';\r\n\r\nexport class Img extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"img\">\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Img;\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport * as actions from \"../../actions/actionPlayer\"\r\n\r\nimport './EnterPin.css'\r\n\r\nexport class EnterPin extends Component {\r\n  onClick = () => {\r\n    var nickName = document.getElementById(\"nickName\").value;\r\n    var pin = document.getElementById(\"pin\").value;\r\n    const { clickSubmitPin } = this.props;\r\n    clickSubmitPin(nickName, parseInt(pin));\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"enterpin\">\r\n        <form\r\n          onSubmit={function(e) {\r\n            e.preventDefault();\r\n          }}\r\n          method=\"POST\"\r\n          className=\"formEnterpin\"\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"nickName\"\r\n              placeholder=\"Nick Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"pin\"\r\n              placeholder=\"PIN\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.onClick()}\r\n          >\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps=(state)=>{\r\n  return{\r\n    player:state.player\r\n  }\r\n}\r\n\r\nconst mapDispathToProps=(dispatch,props)=>{\r\n  return({\r\n    clickSubmitPin:(nickName,pin)=>{\r\n      dispatch(actions.submitPIN(nickName,pin))\r\n    }\r\n  })\r\n}\r\nexport default connect(mapStatetoProps,mapDispathToProps) (EnterPin);\r\n","import React, { Component } from \"react\";\r\n\r\n//...\r\n\r\nimport \"./Waiting.css\";\r\n\r\nclass Waiting extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"waiting row \">\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n        <h1 className=\"text-danger\">Đợi chủ trò bắt đầu trò chơi</h1>\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Waiting;\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\nimport Answer from \"./Answer\";\r\nimport Question from \"./Questions\";\r\nimport Img from \"./Img\";\r\nimport EnterPin from \"./EnterPin\";\r\nimport Waiting from \"./Waiting\";\r\nimport \"./Player.css\";\r\n\r\nexport class Player extends Component {\r\n  componentDidMount = () => {\r\n    const { socket } = this.props.player;\r\n\r\n    socket.on(\"is_join_room\", (is_join_room) => {\r\n      const { isJoinRoom } = this.props;\r\n      isJoinRoom(is_join_room);\r\n    });\r\n\r\n    socket.on(\"startOk\", (start) => {\r\n      const { isPlay } = this.props;\r\n      isPlay(start);\r\n    });\r\n\r\n    socket.on(\"questions\", (questions) => {\r\n      const { loadQuestions } = this.props;\r\n      loadQuestions(questions);\r\n    });\r\n\r\n    socket.on(\"numberCurrentQuestion\", (numberCurrentQuestion) => {\r\n      const { loadQuestion } = this.props;\r\n      loadQuestion(numberCurrentQuestion, false);\r\n    });\r\n  };\r\n\r\n  show = () => {\r\n    const { questions, start, pin, nickName, isJoinRoom } = this.props.player;\r\n\r\n    if (questions !== null && start && pin && isJoinRoom) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-8 wrapper mx-auto\">\r\n            <Question />\r\n            <Img />\r\n            <Answer />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (pin && nickName && !start && isJoinRoom) {\r\n      return <Waiting />;\r\n    } else {\r\n      return <EnterPin />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.show()}</div>;\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n    isJoinRoom: (isJoinRoom) => {\r\n      dispatch(actions.isJoinRoom(isJoinRoom));\r\n    },\r\n    isPlay: (start) => {\r\n      dispatch(actions.isPlay(start));\r\n    },\r\n    loadQuestions: (questions) => {\r\n      dispatch(actions.loadQuestions(questions));\r\n    },\r\n    loadQuestion: (numberQuestion, disableAnswer) => {\r\n      dispatch(actions.loadQuestion(numberQuestion, disableAnswer));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Player);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\n\r\nexport class PlayGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.host;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer = setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 300);\r\n\r\n    const { socket } = this.props.host;\r\n    socket.on(\"memberAnswer\", (data) => {\r\n      const { questions, numberCurrentQuestion } = this.props.host;\r\n      const { members } = this.props.host;\r\n      const { memberAnswer } = this.props;\r\n      const score = questions[numberCurrentQuestion].score;\r\n      if (data.isRight) {\r\n        const index = members.findIndex((m) => m.id === data.id);\r\n\r\n        members[index] = {\r\n          id: members[index].id,\r\n          nickName: members[index].nickName,\r\n          rightQuestion: members[index].rightQuestion + 1,\r\n          score: members[index].score + score,\r\n        };\r\n        members.sort(function (a, b) {\r\n          if (a.score > b.score) {\r\n            return -1;\r\n          }\r\n          if (b.score > a.score) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      memberAnswer(members);\r\n    });\r\n  }\r\n\r\n  onClick = () => {\r\n    const { numberCurrentQuestion, questions } = this.props.host;\r\n    const { clickNextQuestion } = this.props;\r\n    const numberQuestion = questions.length;\r\n    if (numberCurrentQuestion < numberQuestion - 1) clickNextQuestion();\r\n  };\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.host;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) {\r\n      setTimeQuestion(time - 1);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    clearInterval(this.idTimer);\r\n  }\r\n\r\n  render() {\r\n    var {\r\n      numberCurrentQuestion,\r\n      questions,\r\n      numberMembersAnswer,\r\n      members,\r\n      time,\r\n      answersBackgroundColor,\r\n    } = this.props.host;\r\n    const question = questions[numberCurrentQuestion];\r\n    const score = questions[numberCurrentQuestion].score;\r\n    const numberQuestion = questions.length;\r\n    const numberMembers = members.length;\r\n\r\n    var showMembers = members.map((member, i) => {\r\n      return (\r\n        <tbody key={i}>\r\n          <tr>\r\n            <th scope=\"row\">{(i += 1)}</th>\r\n            <td>{member.nickName}</td>\r\n            <td>{member.rightQuestion}</td>\r\n            <td>{member.score}</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    });\r\n    const arr = [];\r\n    arr.push(question.answer1);\r\n    arr.push(question.answer2);\r\n    arr.push(question.answer3);\r\n    arr.push(question.answer4);\r\n\r\n    const answers = arr.map((answer, index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          className={`col-10 col-sm-5 btnAnswer ${answersBackgroundColor[index]} `}\r\n        >\r\n          {answer}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n\r\n    return (\r\n      <div className=\" row\">\r\n        <div className=\"col-12 col-lg-8 questionHost\">\r\n          <h2 className=\"question\">{question.question}</h2>\r\n          <div className=\"row\">\r\n            <div className=\"bg-dark timecountdown\">\r\n              <span className=\"pl-3 text-warning\">Time:</span>\r\n              <span className=\"pl-3 pr-3 text-white\">\r\n                {timeCountDown(time)}\r\n              </span>\r\n            </div>\r\n            <div className=\"bg-dark timecountdown\">\r\n              <span className=\"pl-3 text-warning\">Score:</span>\r\n              <span className=\"pl-3 pr-3 text-white\">{score}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"img\"></div>\r\n\r\n          <div className=\"answers\">{answers}</div>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 \">\r\n          <h1>\r\n            Câu hỏi số: {(numberCurrentQuestion += 1)} / {numberQuestion}\r\n          </h1>\r\n          <h1>\r\n            Số người trả lời:{numberMembersAnswer} /{numberMembers}\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary nextquestion\"\r\n            onClick={this.onClick}\r\n          >\r\n            Next question{\" \"}\r\n            <i className=\"fa fa-step-forward\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">STT</th>\r\n                  <th scope=\"col\">Nick Name</th>\r\n                  <th scope=\"col\">Số câu trả lời đúng</th>\r\n                  <th scope=\"col\">Điểm số</th>\r\n                </tr>\r\n              </thead>\r\n              {showMembers}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n\r\n    clickNextQuestion: (numberCurrentQuestion) => {\r\n      dispatch(actions.clickNextQuestion(numberCurrentQuestion));\r\n    },\r\n    memberAnswer: (members) => {\r\n      dispatch(actions.memberAnswer(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PlayGame);\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const saveNewMember = newMember => {\r\n  return {\r\n    type: types.SAVE_NEW_MEMBER,\r\n    newMember\r\n  };\r\n};\r\nexport const clickStartGame = (startPlay, questions) => {\r\n  return {\r\n    type: types.CLICK_START_PLAY,\r\n    startPlay,\r\n    questions\r\n  };\r\n};\r\nexport const clickNextQuestion = numberCurrentQuestion => {\r\n  return {\r\n    type: types.CLICK_NEXT_QUESTION,\r\n    numberCurrentQuestion\r\n  };\r\n};\r\n\r\nexport const memberExit = members => {\r\n  return {\r\n    type: types.MEMBER_EXIT,\r\n    members\r\n  };\r\n};\r\nexport const memberAnswer = (members) => {\r\n  return {\r\n    type: types.MEMBER_ANSWER,\r\n    members,\r\n  };\r\n};\r\nexport const setTimeQuestion = (time) => {\r\n  return {\r\n    type: types.SET_TIME_QUESTION_HOST,\r\n    time\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\nimport axios from \"axios\";\r\nimport { endPointDataQuestion } from \"../../constants/endPoint\";\r\nimport music from \"./backgroundaudio.mp3\";\r\n\r\nexport class PreparePlayGame extends Component {\r\n  componentDidMount() {\r\n    const { socket, pin } = this.props.host;\r\n\r\n    socket.emit(\"creat_room\", pin);\r\n\r\n    socket.on(\"newMember\", (newMember) => {\r\n      const { saveNewMember } = this.props;\r\n      saveNewMember(newMember);\r\n    });\r\n\r\n    socket.on(\"memberExit\", (data) => {\r\n      var { members } = this.props.host;\r\n      const index = members.findIndex((m) => m.id === data.id);\r\n      members.splice(index, 1);\r\n      const { memberExit } = this.props;\r\n      memberExit(members);\r\n    });\r\n  }\r\n\r\n  onClick = async () => {\r\n    const { socket } = this.props.host;\r\n    const { clickStartGame } = this.props;\r\n    const token=localStorage.getItem(\"token\")\r\n    socket.emit(\"start\", true);\r\n    const questions = await axios.get(endPointDataQuestion, {\r\n      headers: { \"x-access-token\": `${token}` },\r\n    });\r\n    socket.emit(\"questions\", questions.data);\r\n    clickStartGame(true, questions.data);\r\n  };\r\n  render() {\r\n    const { members, pin } = this.props.host;\r\n    const numberMember = members.length;\r\n    var showMembers = members.map((member, index) => {\r\n      return (\r\n        <button type=\"button\" key={index} className=\"btn btn-danger member \">\r\n          {member.nickName} <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"prepareplaygame\">\r\n        <audio className=\"hideAudio\" controls loop autoPlay>\r\n          <source src={music} />\r\n        </audio>\r\n        <p className=\"pin\">PIN:{pin}</p>\r\n        <div className=\"startgame\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.onClick}\r\n            className=\"btn btn-success\"\r\n          >\r\n            Start Game\r\n          </button>\r\n        </div>\r\n        <div className=\"card boxmembers\">\r\n          <h2 className=\"card-header\">Số lượng thành viên: {numberMember} </h2>\r\n          <div className=\"members\">{showMembers}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickStartGame: (playStart, questions) => {\r\n      dispatch(actions.clickStartGame(playStart, questions));\r\n    },\r\n    saveNewMember: (newMember) => {\r\n      dispatch(actions.saveNewMember(newMember));\r\n    },\r\n    memberExit: (members) => {\r\n      dispatch(actions.memberExit(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PreparePlayGame);\r\n","import React, { Component } from \"react\";\r\nimport PlayGame from \"./PlayGame\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport PreparePlayGame from \"./PreparePlayGame\";\r\nimport axios from \"axios\";\r\nimport { urlVerifyToken } from \"../../constants/endPoint\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Game.css\";\r\n\r\nexport class Game extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.checkToken();\r\n  }\r\n\r\n  checkToken = async () => {\r\n    let token = localStorage.getItem(\"token\");\r\n    const ret = await axios.post(urlVerifyToken, { token: token });\r\n    if (!ret.data) {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const { startPlay } = this.props.host;\r\n      if (startPlay) {\r\n        return <PlayGame />;\r\n      } else {\r\n        return <PreparePlayGame />;\r\n      }\r\n    } else {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStatetoProps, null)(Game));\r\n","import React, { Component } from 'react';\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               Không tìm thấy trang bạn ơi!!!!!!!!!!!!!!!!!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link,Redirect,withRouter  } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionLogin\";\r\nimport { urlLogin } from \"../../constants/endPoint\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n\r\n\r\n  onchange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    let { account } = this.props.login;\r\n    let { onChange } = this.props;\r\n    account = {\r\n      ...account,\r\n      [name]: value,\r\n    };\r\n    onChange(account);\r\n  };\r\n\r\n  onclick = () => {\r\n    const { account } = this.props.login;\r\n    axios.post(urlLogin, account).then((res) => {\r\n      if (res.data.failLogin) alert(JSON.stringify(res.data.failLogin));\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        this.props.history.push(\"/playgame\")\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      return <Redirect to=\"/playgame\" />;\r\n    }\r\n    return (\r\n      <div className=\"background p-5\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"http://pluspng.com/img-png/login-button-png-login-button-png-image-18028-872.png\"\r\n                    className=\"card-img mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"inputUsername\"\r\n                      name=\"userName\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUsername\">Username</label>\r\n                  </div>\r\n\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"inputPassword\"\r\n                      name=\"passWord\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <Link\r\n                    className=\"d-block text-center mt-2 small\"\r\n                    to=\"./register\"\r\n                  >\r\n                    Register\r\n                  </Link>\r\n                  <hr className=\"mt-5\" />\r\n                  <button\r\n                    className=\"btn btn-lg btn-google btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fa fa-google\" aria-hidden=\"true\"></i> Sign in\r\n                    with Google\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-facebook btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-facebook-official\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>{\" \"}\r\n                    Sign in with Facebook\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    login: state.login,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    onChange: (account) => {\r\n      dispatch(actions.onChange(account));\r\n    },\r\n  };\r\n};\r\nexport default withRouter(connect(mapStatetoProps, mapDispathToProps) (Login));\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const onChange = account => {\r\n  return {\r\n    type: types.ON_CHANGE_LOGIN,\r\n    account\r\n  };\r\n};","import React, { Component } from \"react\";\r\nimport { Link,Redirect  } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionRegister\";\r\nimport { urlRegister } from \"../../constants/endPoint\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nclass Register extends Component {\r\n\r\n\r\n  accountInvalid = (account) => {\r\n    if (\r\n      account.userName != null &&\r\n      account.fullName != null &&\r\n      account.email != null &&\r\n      account.confirmPassword != null &&\r\n      account.passWord === account.confirmPassword\r\n    )\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  onclick = () => {\r\n    const { account } = this.props.register;\r\n    const acc={...account}\r\n    if (this.accountInvalid(account)) {\r\n      delete acc.confirmPassword;\r\n      axios.post(urlRegister, acc).then((res) => {\r\n        alert(res.data);\r\n      });\r\n    } else {\r\n      alert(\"Bạn phải điền đầy đủ thông tin\");\r\n    }\r\n  };\r\n  onchange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    let { account } = this.props.register;\r\n    let { onChange } = this.props;\r\n    account = {\r\n      ...account,\r\n      [name]: value,\r\n    };\r\n    onChange(account);\r\n  };\r\n\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      return <Redirect to=\"/playgame\" />;\r\n    }\r\n    return (\r\n      <div className=\"background p-1\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"https://www.pngmart.com/files/3/Register-Button-Transparent-Background.png\"\r\n                    className=\"card-img  mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      id=\"inputUsername\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUsername\">Username</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"fullName\"\r\n                      id=\"inputFullname\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Full name\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputFullname\">Full name</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"inputEmail\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email address\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputEmail\">Email address</label>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"passWord\"\r\n                      id=\"inputPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"confirmPassword\"\r\n                      id=\"inputConfirmPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputConfirmPassword\">\r\n                      Confirm password\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Register\r\n                  </button>\r\n\r\n                  <Link className=\"d-block text-center mt-2 small\" to=\"./login\">\r\n                    login\r\n                  </Link>\r\n                  <hr className=\"mt-2\" />\r\n                  <button\r\n                    className=\"btn btn-lg btn-google btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fa fa-google\" aria-hidden=\"true\"></i> Sign in\r\n                    with Google\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-lg btn-facebook btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-facebook-official\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>{\" \"}\r\n                    Sign in with Facebook\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    register: state.register,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    onChange: (account) => {\r\n      dispatch(actions.onChange(account));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Register);\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const onChange = account => {\r\n  return {\r\n    type: types.ON_CHANGE_REGISTER,\r\n    account\r\n  };\r\n};","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Player from \"./components/player/Player\";\nimport Game from \"./components/host/Game\";\nimport NotFound from \"./components/notfound/NotFound\";\nimport Login from \"./components/accounts/Login\";\nimport Register from \"./components/accounts/Register\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Player />\n          </Route>\n          <Route path=\"/playgame\" exact>\n            <Game />\n          </Route>\n          <Route path=\"/login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//Stort\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport myReducer from \"./reducers/index\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(myReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/backgroundaudio.249424ec.mp3\";"],"sourceRoot":""}