{"version":3,"sources":["const.js","reducers/player.reducer.js","constants/ActionTypes.js","reducers/host.reducer.js","reducers/index.js","actions/actionPlayer.js","components/player/Answer.js","components/player/Questions.js","components/player/Img.js","components/player/EnterPin.js","components/player/Waiting.js","components/player/Player.js","components/host/PlayGame.js","actions/actionHost.js","components/host/PreparePlayGame.js","components/host/Game.js","components/notfound/NotFound.js","components/accounts/Login.js","components/accounts/Register.js","App.js","serviceWorker.js","index.js","components/host/backgroundaudio.mp3"],"names":["endPoint","intialState","socket","openSocket","rememberUpgrade","transports","secure","rejectUnauthorized","questions","numberCurrentQuestion","score","start","nickName","pin","arrRoom","isJoinRoom","disableAnswer","time","myReducer","state","action","type","emit","timeAnswer","Math","floor","random","startPlay","numberMembersAnswer","members","push","newMember","combineReducers","player","host","setTimeQuestion","Answer","onClick","index","props","clickAnswer","rightAnswer","alert","this","question","className","disabled","answer1","answer2","answer3","answer4","Component","connect","dispatch","actions","Questions","timeCountDown","idTimer","t","setInterval","clearInterval","sec","Img","EnterPin","document","getElementById","value","clickSubmitPin","parseInt","onSubmit","e","preventDefault","method","id","placeholder","Waiting","role","Player","componentDidMount","on","is_join_room","isPlay","loadQuestions","loadQuestion","show","numberQuestion","PlayGame","clickNextQuestion","length","data","memberAnswer","isRight","findIndex","m","rightQuestion","sort","a","b","numberMembers","showMembers","map","member","i","key","scope","aria-hidden","PreparePlayGame","clickStartGame","axios","get","saveNewMember","splice","memberExit","numberMember","controls","loop","autoPlay","src","music","playStart","Game","NotFound","Login","alt","name","autoFocus","onChange","onchange","htmlFor","onclick","to","Register","App","path","exact","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.bab2223e.chunk.js","sourcesContent":["export const endPoint = `https://dacnpm-nhom1.herokuapp.com/`;\r\nexport const endPointDataQuestion = `https://dacnpm-nhom1.herokuapp.com/getdata`;\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../const\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\nvar socket = openSocket(endPoint, options);\r\n\r\nvar intialState = {\r\n  socket: socket,\r\n  questions: null,\r\n  numberCurrentQuestion: 0,\r\n  score: 0,\r\n  start: false,\r\n  nickName: \"\",\r\n  pin: \"\",\r\n  arrRoom: [],\r\n  isJoinRoom: false,\r\n  disableAnswer: false,\r\n  time: 0,\r\n};\r\n\r\nvar myReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case types.CLICK_SUBMIT_PIN: {\r\n      state.socket.emit(\"join_room\", action.pin);\r\n      state.socket.emit(\"nickName\", action.nickName);\r\n      state.pin = action.pin;\r\n      state.nickName = action.nickName;\r\n\r\n      return { ...state };\r\n    }\r\n    case types.IS_JOIN_ROOM: {\r\n      state.isJoinRoom = action.isJoinRoom;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.IS_PLAY: {\r\n      state.start = action.start;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTIONS: {\r\n      state.questions = action.questions;\r\n      return { ...state };\r\n    }\r\n    case types.LOAD_QUESTION: {\r\n      state.disableAnswer = false;\r\n      state.numberCurrentQuestion = action.numberCurrentQuestion;\r\n      if (state.questions)\r\n        state.time = state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_ANSWER: {\r\n      state.disableAnswer = action.disableAnswer;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION: {\r\n      state.time = action.time;\r\n      if (state.time === 0) {\r\n        state.disableAnswer = true;\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","//Player Actions\r\nexport const CLICK_SUBMIT_PIN = \"CLICK_SUBMIT_PIN\";\r\nexport const IS_JOIN_ROOM = \"IS_JOIN_ROOM\";\r\nexport const IS_PLAY = \"IS_PLAY\";\r\nexport const LOAD_QUESTIONS = \"LOAD_QUESTIONS\";\r\nexport const LOAD_QUESTION = \"LOAD_QUESTION\";\r\nexport const CLICK_ANSWER = \"CLICK_ANSWER\";\r\n//Host Actions\r\nexport const SAVE_NEW_MEMBER = \"SAVE_NEW_MEMBER\";\r\nexport const CLICK_START_PLAY = \"CLICK_START_PLAY\";\r\nexport const CLICK_NEXT_QUESTION=\"CLICK_NEXT_QUESTION\"\r\nexport const MEMBER_EXIT=\"MEMBER_EXIT\"\r\nexport const MEMBER_ANSWER=\"MEMBER_ANSWER\"\r\nexport const SET_TIME_QUESTION=\"SET_TIME_QUESTION\"\r\n","import * as types from \"../constants/ActionTypes\";\r\nimport { endPoint } from \"../const\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false\r\n};\r\nvar socket = openSocket(endPoint, options);\r\n\r\nvar intialState = {\r\n  socket: socket,\r\n  pin: Math.floor(Math.random() * 10000) + 1,\r\n  startPlay: false,\r\n  questions: [],\r\n  numberMembersAnswer: 0,\r\n  members: [],\r\n  numberCurrentQuestion: 0,\r\n  time:0,\r\n};\r\nvar myReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_NEW_MEMBER: {\r\n      state.members.push(action.newMember);\r\n      return { ...state };\r\n    }\r\n    case types.CLICK_START_PLAY: {\r\n      state.startPlay = action.startPlay;\r\n      state.questions = [...action.questions];\r\n      return { ...state };\r\n    }\r\n\r\n    case types.CLICK_NEXT_QUESTION: {\r\n      state.socket.emit(\"next\", 1);\r\n      state.numberCurrentQuestion += 1;\r\n      state.time =state.questions[state.numberCurrentQuestion].timeAnswer;\r\n      state.numberMembersAnswer = 0;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_EXIT: {\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n\r\n    case types.MEMBER_ANSWER: {\r\n      state.numberMembersAnswer+=1;\r\n      state.members = action.members;\r\n      return { ...state };\r\n    }\r\n    case types.SET_TIME_QUESTION: {\r\n      state.time=action.time;\r\n      return { ...state };\r\n    }\r\n    \r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import {combineReducers} from \"redux\";\r\nimport player from \"./player.reducer\"\r\nimport host from \"./host.reducer\"\r\n\r\nconst myReducer =combineReducers({\r\n    player,\r\n    host\r\n})\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\"\r\n\r\nexport const submitPIN = (nickName,pin)=>{\r\n    return{\r\n        type:types.CLICK_SUBMIT_PIN,\r\n        nickName,\r\n        pin\r\n    }\r\n}\r\n\r\nexport const isJoinRoom = (isJoinRoom)=>{\r\n    return{\r\n        type:types.IS_JOIN_ROOM,\r\n        isJoinRoom\r\n    }\r\n}\r\n\r\nexport const isPlay = (start)=>{\r\n    return{\r\n        type:types.IS_PLAY,\r\n        start\r\n    }\r\n}\r\nexport const loadQuestions = (questions)=>{\r\n    return{\r\n        type:types.LOAD_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\nexport const loadQuestion = (numberCurrentQuestion,disableAnswer)=>{\r\n    return{\r\n        type:types.LOAD_QUESTION,\r\n        numberCurrentQuestion,\r\n        disableAnswer\r\n    }\r\n}\r\nexport const clickAnswer = (disableAnswer)=>{\r\n    return{\r\n        type:types.CLICK_ANSWER,\r\n        disableAnswer\r\n    }\r\n}\r\nexport const setTimeQuestion = (time) => {\r\n    return {\r\n      type: types.SET_TIME_QUESTION,\r\n      time\r\n    };\r\n  };\r\n  \r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Answer extends Component {\r\n\r\n  onClick = index => {\r\n    const { socket, questions, numberCurrentQuestion } = this.props.player;\r\n    const { clickAnswer } = this.props;\r\n    const rightAnswer = questions[numberCurrentQuestion].rightAnswer;\r\n    clickAnswer(true);\r\n    if (index === rightAnswer) {\r\n      socket.emit(\"memberAnswer\", true);\r\n      alert(\"Bạn trả lời đúng rồi\");\r\n    } else {\r\n      socket.emit(\"memberAnswer\", false);\r\n      alert(\"Bạn trả lời sai rồi\");\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    const { questions, numberCurrentQuestion, disableAnswer } = this.props.player;\r\n    const question = questions[numberCurrentQuestion];\r\n   \r\n\r\n    return (\r\n      <div className=\"answers \">\r\n        <button\r\n          onClick={() => this.onClick(1)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className=\"btn btn-success  col-10 col-sm-5 answer\"\r\n        >\r\n          {question.answer1}\r\n        </button>\r\n        <button\r\n          onClick={() => this.onClick(2)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className=\"btn btn-success col-10 col-sm-5 answer\"\r\n        >\r\n          {question.answer2}\r\n        </button>\r\n        <button\r\n          onClick={() => this.onClick(3)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className=\"btn btn-success col-10 col-sm-5 answer\"\r\n        >\r\n          {question.answer3}\r\n        </button>\r\n        <button\r\n          onClick={() => this.onClick(4)}\r\n          type=\"button\"\r\n          disabled={disableAnswer}\r\n          className=\"btn btn btn-success col-10 col-sm-5 answer\"\r\n        >\r\n          {question.answer4}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    player: state.player\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickAnswer: disableAnswer => {\r\n      dispatch(actions.clickAnswer(disableAnswer));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Answer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\n\r\nexport class Questions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.player;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer= setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 500);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.idTimer)\r\n  }\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.player;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) setTimeQuestion(time - 1);\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { questions, numberCurrentQuestion, time } = this.props.player;\r\n    const question = questions[numberCurrentQuestion].question;\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n    return (\r\n      <div>\r\n        <h2 className=\"question\">{question}</h2>\r\n        <div className=\"bg-dark timecountdown\">\r\n          <span className=\"pl-3 text-warning\">Time:</span>\r\n          <span className=\"pl-3 pr-3 text-white\">{timeCountDown(time)}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    }\r\n    \r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Questions);\r\n","import React, { Component } from 'react';\r\n\r\nexport class Img extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"img\">\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Img;\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport * as actions from \"../../actions/actionPlayer\"\r\n\r\nimport './EnterPin.css'\r\n\r\nexport class EnterPin extends Component {\r\n  onClick = () => {\r\n    var nickName = document.getElementById(\"nickName\").value;\r\n    var pin = document.getElementById(\"pin\").value;\r\n    const { clickSubmitPin } = this.props;\r\n    clickSubmitPin(nickName, parseInt(pin));\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"enterpin\">\r\n        <form\r\n          onSubmit={function(e) {\r\n            e.preventDefault();\r\n          }}\r\n          method=\"POST\"\r\n          className=\"formEnterpin\"\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"nickName\"\r\n              placeholder=\"Nick Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"pin\"\r\n              placeholder=\"PIN\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.onClick()}\r\n          >\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps=(state)=>{\r\n  return{\r\n    player:state.player\r\n  }\r\n}\r\n\r\nconst mapDispathToProps=(dispatch,props)=>{\r\n  return({\r\n    clickSubmitPin:(nickName,pin)=>{\r\n      dispatch(actions.submitPIN(nickName,pin))\r\n    }\r\n  })\r\n}\r\nexport default connect(mapStatetoProps,mapDispathToProps) (EnterPin);\r\n","import React, { Component } from \"react\";\r\n\r\n//...\r\n\r\nimport \"./Waiting.css\";\r\n\r\nclass Waiting extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"waiting row \">\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n        <h1 className=\"text-danger\">Đợi chủ trò bắt đầu trò chơi</h1>\r\n        <div className=\"spinner-border text-success\" role=\"status\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Waiting;\r\n","import React, { Component } from \"react\";\r\nimport * as actions from \"../../actions/actionPlayer\";\r\nimport { connect } from \"react-redux\";\r\nimport Answer from \"./Answer\";\r\nimport Question from \"./Questions\";\r\nimport Img from \"./Img\";\r\nimport EnterPin from \"./EnterPin\";\r\nimport Waiting from \"./Waiting\";\r\nimport \"./Player.css\";\r\n\r\nexport class Player extends Component {\r\n  componentDidMount = () => {\r\n  \r\n    const { socket } = this.props.player;\r\n\r\n    socket.on(\"is_join_room\", (is_join_room) => {\r\n      const { isJoinRoom } = this.props;\r\n      isJoinRoom(is_join_room);\r\n    });\r\n\r\n    socket.on(\"startOk\", (start) => {\r\n      const { isPlay } = this.props;\r\n      isPlay(start);\r\n    });\r\n\r\n    socket.on(\"questions\", (questions) => {\r\n      const { loadQuestions } = this.props;\r\n      loadQuestions(questions);\r\n    });\r\n\r\n    socket.on(\"numberCurrentQuestion\", (numberCurrentQuestion) => {\r\n      const { loadQuestion } = this.props;\r\n      loadQuestion(numberCurrentQuestion, false);\r\n    });\r\n  };\r\n\r\n  show = () => {\r\n    const { questions, start, pin, nickName, isJoinRoom} = this.props.player;\r\n  \r\n    if (questions !== null && start && pin && isJoinRoom) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-8 wrapper mx-auto\">\r\n            <Question />\r\n           \r\n            <Img />\r\n            <Answer />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (pin && nickName && !start && isJoinRoom) {\r\n      return <Waiting />;\r\n    } else {\r\n      return <EnterPin />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.show()}</div>;\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n    isJoinRoom: (isJoinRoom) => {\r\n      dispatch(actions.isJoinRoom(isJoinRoom));\r\n    },\r\n    isPlay: (start) => {\r\n      dispatch(actions.isPlay(start));\r\n    },\r\n    loadQuestions: (questions) => {\r\n      dispatch(actions.loadQuestions(questions));\r\n    },\r\n    loadQuestion: (numberQuestion, disableAnswer) => {\r\n      dispatch(actions.loadQuestion(numberQuestion, disableAnswer));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(Player);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\n\r\nexport class PlayGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.idTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { questions, numberCurrentQuestion } = this.props.host;\r\n    const t = questions[numberCurrentQuestion].timeAnswer;\r\n\r\n    const { setTimeQuestion } = this.props;\r\n    setTimeQuestion(t);\r\n\r\n    this.idTimer = setInterval(() => {\r\n      this.timeCountDown();\r\n    }, 500);\r\n\r\n    const { socket } = this.props.host;\r\n    socket.on(\"memberAnswer\", (data) => {\r\n      const { members } = this.props.host;\r\n      const { memberAnswer } = this.props;\r\n      if (data.isRight) {\r\n        const index = members.findIndex((m) => m.id === data.id);\r\n\r\n        members[index] = {\r\n          id: members[index].id,\r\n          nickName: members[index].nickName,\r\n          rightQuestion: members[index].rightQuestion + 1,\r\n          score: members[index].score + 100,\r\n        };\r\n        members.sort(function (a, b) {\r\n          if (a.score > b.score) {\r\n            return -1;\r\n          }\r\n          if (b.score > a.score) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      memberAnswer(members);\r\n    });\r\n  }\r\n\r\n  onClick = () => {\r\n    const { numberCurrentQuestion, questions } = this.props.host;\r\n    const { clickNextQuestion } = this.props;\r\n    const numberQuestion = questions.length;\r\n    if (numberCurrentQuestion < numberQuestion - 1) clickNextQuestion();\r\n  };\r\n\r\n  timeCountDown = () => {\r\n    var { time } = this.props.host;\r\n    const { setTimeQuestion } = this.props;\r\n    if (time > 0) {\r\n      \r\n      setTimeQuestion(time - 1);\r\n    }\r\n  };\r\n  componentWillUnmount(){\r\n    clearInterval(this.idTimer);\r\n  }\r\n\r\n  render() {\r\n    var {\r\n      numberCurrentQuestion,\r\n      questions,\r\n      numberMembersAnswer,\r\n      members,\r\n      time,\r\n    } = this.props.host;\r\n    const question = questions[numberCurrentQuestion];\r\n    const numberQuestion = questions.length;\r\n    const numberMembers = members.length;\r\n\r\n    var showMembers = members.map((member, i) => {\r\n      return (\r\n        <tbody key={i}>\r\n          <tr>\r\n            <th scope=\"row\">{(i += 1)}</th>\r\n            <td>{member.nickName}</td>\r\n            <td>{member.rightQuestion}</td>\r\n            <td>{member.score}</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    });\r\n\r\n    var timeCountDown = (time) => {\r\n      var min = 0;\r\n      var sec = 0;\r\n\r\n      if (time >= 60) {\r\n        min = time / 60;\r\n        sec = time % 60;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \"\" + sec;\r\n      } else if (time > 0) {\r\n        min = \"00\";\r\n        sec = time;\r\n        if (sec < 10) sec = \"0\" + sec;\r\n        time = min + \":\" + sec;\r\n      } else {\r\n        time = \"Hết giờ\";\r\n      }\r\n      return time;\r\n    };\r\n\r\n    return (\r\n      <div className=\" row\">\r\n        <div className=\"col-12 col-lg-8 questionHost\">\r\n          <h2 className=\"question\">{question.question}</h2>\r\n\r\n          <div className=\"bg-dark timecountdown\">\r\n            <span className=\"pl-3 text-warning\">Time:</span>\r\n            <span className=\"pl-3 pr-3 text-white\">{timeCountDown(time)}</span>\r\n          </div>\r\n\r\n          <div className=\"img\"></div>\r\n          <div className=\"answers\">\r\n            <button className=\"btn btn-success col-10 col-sm-5 answer\">\r\n              {question.answer1}\r\n            </button>\r\n            <button className=\"btn btn-success col-10 col-sm-5 answer\">\r\n              {question.answer2}\r\n            </button>\r\n            <button className=\"btn btn-success col-10 col-sm-5 answer\">\r\n              {question.answer3}\r\n            </button>\r\n            <button className=\"btn btn-success col-10 col-sm-5 answer\">\r\n              {question.answer4}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 \">\r\n          <h1>\r\n            Câu hỏi số: {(numberCurrentQuestion += 1)} / {numberQuestion}\r\n          </h1>\r\n          <h1>\r\n            Số người trả lời:{numberMembersAnswer} /{numberMembers}\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary nextquestion\"\r\n            onClick={this.onClick}\r\n          >\r\n            Next question{\" \"}\r\n            <i className=\"fa fa-step-forward\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">STT</th>\r\n                  <th scope=\"col\">Nick Name</th>\r\n                  <th scope=\"col\">Số câu trả lời đúng</th>\r\n                  <th scope=\"col\">Điểm số</th>\r\n                </tr>\r\n              </thead>\r\n              {showMembers}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    setTimeQuestion: (time) => {\r\n      dispatch(actions.setTimeQuestion(time));\r\n    },\r\n\r\n    clickNextQuestion: (numberCurrentQuestion) => {\r\n      dispatch(actions.clickNextQuestion(numberCurrentQuestion));\r\n    },\r\n    memberAnswer: (members) => {\r\n      dispatch(actions.memberAnswer(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PlayGame);\r\n","import * as types from \"../constants/ActionTypes\";\r\nexport const saveNewMember = newMember => {\r\n  return {\r\n    type: types.SAVE_NEW_MEMBER,\r\n    newMember\r\n  };\r\n};\r\nexport const clickStartGame = (startPlay, questions) => {\r\n  return {\r\n    type: types.CLICK_START_PLAY,\r\n    startPlay,\r\n    questions\r\n  };\r\n};\r\nexport const clickNextQuestion = numberCurrentQuestion => {\r\n  return {\r\n    type: types.CLICK_NEXT_QUESTION,\r\n    numberCurrentQuestion\r\n  };\r\n};\r\n\r\nexport const memberExit = members => {\r\n  return {\r\n    type: types.MEMBER_EXIT,\r\n    members\r\n  };\r\n};\r\nexport const memberAnswer = (members) => {\r\n  return {\r\n    type: types.MEMBER_ANSWER,\r\n    members,\r\n  };\r\n};\r\nexport const setTimeQuestion = (time) => {\r\n  return {\r\n    type: types.SET_TIME_QUESTION,\r\n    time\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actionHost\";\r\nimport axios from \"axios\";\r\nimport { endPointDataQuestion } from \"../../const\";\r\nimport music from \"./backgroundaudio.mp3\"\r\n\r\nexport class PreparePlayGame extends Component {\r\n  componentDidMount() {\r\n    const { socket, pin } = this.props.host;\r\n\r\n    socket.emit(\"creat_room\", pin);\r\n\r\n    socket.on(\"newMember\", (newMember) => {\r\n      const { saveNewMember } = this.props;\r\n      saveNewMember(newMember);\r\n    });\r\n\r\n    socket.on(\"memberExit\", (data) => {\r\n      var { members } = this.props.host;\r\n      const index = members.findIndex((m) => m.id === data.id);\r\n      members.splice(index, 1);\r\n      const { memberExit } = this.props;\r\n      memberExit(members);\r\n    });\r\n  }\r\n\r\n  onClick = async () => {\r\n    const { socket } = this.props.host;\r\n    const { clickStartGame } = this.props;\r\n    socket.emit(\"start\", true);\r\n    const questions = await axios.get(endPointDataQuestion);\r\n    socket.emit(\"questions\", questions.data);\r\n    clickStartGame(true, questions.data);\r\n  };\r\n  render() {\r\n    const { members, pin } = this.props.host;\r\n    const numberMember = members.length;\r\n    var showMembers = members.map((member, index) => {\r\n      return (\r\n        <button type=\"button\" key={index} className=\"btn btn-danger member \">\r\n          {member.nickName} <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"prepareplaygame\">\r\n        <audio className=\"hideAudio\" controls loop autoPlay>\r\n          <source src={music} />\r\n        </audio>\r\n        <p className=\"pin\">PIN:{pin}</p>\r\n        <div className=\"startgame\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.onClick}\r\n            className=\"btn btn-success\"\r\n          >\r\n            Start Game\r\n          </button>\r\n        </div>\r\n        <div className=\"card boxmembers\">\r\n          <h2 className=\"card-header\">Số lượng thành viên: {numberMember} </h2>\r\n          <div className=\"members\">{showMembers}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    host: state.host,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n  return {\r\n    clickStartGame: (playStart, questions) => {\r\n      dispatch(actions.clickStartGame(playStart, questions));\r\n    },\r\n    saveNewMember: (newMember) => {\r\n      dispatch(actions.saveNewMember(newMember));\r\n    },\r\n    memberExit: (members) => {\r\n      dispatch(actions.memberExit(members));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispathToProps)(PreparePlayGame);\r\n","import React, { Component } from \"react\";\r\nimport PlayGame from \"./PlayGame\";\r\nimport PreparePlayGame from \"./PreparePlayGame\";\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Game.css\";\r\n\r\nexport class Game extends Component {\r\n  \r\n  render() {\r\n    const { startPlay } = this.props.host;\r\n    if (startPlay) {\r\n      return <PlayGame />;\r\n    } else {\r\n      return <PreparePlayGame />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    host: state.host\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStatetoProps, null)(Game);\r\n","import React, { Component } from 'react';\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               Không tìm thấy trang bạn ơi!!!!!!!!!!!!!!!!!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"background p-5\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"http://pluspng.com/img-png/login-button-png-login-button-png-image-18028-872.png\"\r\n                    className=\"card-img mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"inputUserame\"\r\n                      name=\"username\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUserame\">Username</label>\r\n                  </div>\r\n\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"inputPassword\"\r\n                      name=\"password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <Link\r\n                    className=\"d-block text-center mt-2 small\"\r\n                    to=\"./register\"\r\n                  >\r\n                    Register\r\n                  </Link>\r\n                  <hr className=\"mt-5\" />\r\n                  <button\r\n                    className=\"btn btn-lg btn-google btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab mr-2\"></i> Sign in with Google\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-facebook btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab fa-facebook-f mr-2\"></i> Sign in with\r\n                    Facebook\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"background p-1\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-signin\" method=\"POST\" id=\"loginForm\">\r\n                  <img\r\n                    src=\"https://lh3.googleusercontent.com/proxy/2yUY8bRd1oKOJgSpD5uCEOuYIOlIFWkTdlubvxfJ5K7v-9sW6Idy0aCdaAd8OQhvsgvCERwz7SAAGFFDAyqNmTiMhtKgdka-TYrK_3IXsuVeIQK0-ZlOYSJ9dF9SIH_WRA\"\r\n                    className=\"card-img  mb-5\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      id=\"inputUsername\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      autoFocus\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputUsername\">Username</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"fullname\"\r\n                      id=\"inputFullname\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Full name\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputFullname\">Full name</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"inputEmail\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email address\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputEmail\">Email address</label>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"inputPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputPassword\">Password</label>\r\n                  </div>\r\n                  <div className=\"form-label-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"confirmpassword\"\r\n                      id=\"inputConfirmPassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label htmlFor=\"inputConfirmPassword\">\r\n                      Confirm password\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"customCheck1\"\r\n                      onChange={this.onchange}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"customCheck1\"\r\n                    >\r\n                      Remember password\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"button\"\r\n                    onClick={this.onclick}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <Link className=\"d-block text-center mt-2 small\" to=\"./login\">\r\n                    login\r\n                  </Link>\r\n                  <hr className=\"mt-2\" />\r\n                  <button\r\n                    className=\"btn btn-lg btn-google btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab mr-2\"></i> Sign in with Google\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-lg btn-facebook btn-block text-uppercase\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <i className=\"fab  mr-2\"></i> Sign in with Facebook\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport { HashRouter   as Router, Route, Switch } from \"react-router-dom\";\n\nimport Player from \"./components/player/Player\";\nimport Game from \"./components/host/Game\";\nimport NotFound from \"./components/notfound/NotFound\";\nimport Login from \"./components/accounts/Login\";\nimport Register from \"./components/accounts/Register\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Player />\n          </Route>\n          <Route path=\"/playgame\" exact>\n            <Game />\n          </Route>\n          <Route path=\"/account/login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/account/register\" exact>\n            <Register />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//Stort\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport myReducer from \"./reducers/index\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(myReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/backgroundaudio.249424ec.mp3\";"],"sourceRoot":""}