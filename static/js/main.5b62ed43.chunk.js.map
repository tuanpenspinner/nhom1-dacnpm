{"version":3,"sources":["components/game/Answer.js","components/game/Quetions.js","components/game/Img.js","components/game/EnterPin.js","components/game/Box.js","components/admin/PlayGame.js","components/admin/PreparePlayGame.js","components/admin/Game.js","components/notfound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Answer","onClick","index","clickAnswer","props","this","answer","disable","answers","map","a","key","type","disabled","className","Component","Quetions","question","Img","EnterPin","nickName","document","getElementById","value","pin","clickSubmit","parseInt","onSubmit","e","preventDefault","method","id","placeholder","Box","start","endpoint","state","socket","openSocket","rememberUpgrade","transports","secure","rejectUnauthorized","on","data","setState","numberQuestion","disableAnswer","getData","axios","get","then","res","questions","catch","err","console","log","numberAnswer","rightAnswer","emit","alert","length","show","score","PlayGame","clickNext","numberQuestions","numberMember","numberMemberAnswer","members","i","showMembers","member","scope","rightQuestion","aria-hidden","PreparePlayGame","clickStart","Game","isRight","findIndex","m","sort","b","splice","startPlay","NotFound","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5b62ed43.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Answer extends Component {\r\n \r\n  onClick = index => {\r\n    const { clickAnswer } = this.props;\r\n   \r\n    clickAnswer(index);\r\n  };\r\n  render() {\r\n    const { answer,disable } = this.props;\r\n  \r\n\r\n    const answers = answer.map((a, index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          onClick={() => this.onClick(index)}\r\n          type=\"button\"\r\n          disabled={disable}\r\n          className=\"btn btn-secondary col-12 col-sm-5 answer\"\r\n        >\r\n          {a}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\" row\">{answers}</div>;\r\n  }\r\n}\r\n\r\nexport default Answer;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Quetions extends Component {\r\n  render() {\r\n    const { question } = this.props;\r\n    return (\r\n      <div className=\"badge badge-danger question\">\r\n        <h2>{question}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quetions;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Img extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"img\">\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Img;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class EnterPin extends Component {\r\n  onClick = () => {\r\n    var nickName = document.getElementById(\"nickName\").value;\r\n    var pin = document.getElementById(\"pin\").value;\r\n    const { clickSubmit } = this.props;\r\n    clickSubmit(nickName, parseInt(pin));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"enterpin\">\r\n        <form\r\n          onSubmit={function(e) {\r\n            e.preventDefault();\r\n          }}\r\n          method=\"POST\"\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"nickName\"\r\n              placeholder=\"Nick Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"pin\"\r\n              placeholder=\"PIN\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.onClick()}\r\n          >\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnterPin;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Answer from \"./Answer\";\r\nimport Question from \"./Quetions\";\r\nimport Img from \"./Img\";\r\nimport EnterPin from \"./EnterPin\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nexport class Box extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      endpoint: \"http://localhost:8000\",\r\n      questions: \"\",\r\n      numberQuestion: 0,\r\n      score: 0,\r\n      start: false,\r\n      nickName: \"\",\r\n      pin: \"\",\r\n      disableAnswer: false\r\n    };\r\n    this.socket = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.start();\r\n  }\r\n\r\n  start = () => {\r\n    var options = {\r\n      rememberUpgrade: true,\r\n      transports: [\"websocket\"],\r\n      secure: true,\r\n      rejectUnauthorized: false\r\n    };\r\n\r\n    const { endpoint } = this.state;\r\n    this.socket = openSocket(endpoint, options);\r\n    this.socket.on(\"numberQuestion\", data => {\r\n      this.setState({ numberQuestion: data, disableAnswer: false });\r\n    });\r\n    this.socket.on(\"startOk\", start => {\r\n      if (start) {\r\n        this.getData();\r\n      } else {\r\n        this.setState({\r\n          start: false,\r\n          nickName: \"\",\r\n          pin: \"\"\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    axios\r\n      .get(`http://localhost:8000/getdata`)\r\n      .then(res => {\r\n        const questions = res.data;\r\n        this.setState({\r\n          questions,\r\n          start: true\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return 0;\r\n      });\r\n  };\r\n\r\n  clickAnswer = numberAnswer => {\r\n    const { questions } = this.state;\r\n    var { numberQuestion } = this.state;\r\n    const rightAnswer = questions[numberQuestion].rightAnswer;\r\n    this.setState({\r\n      disableAnswer: true\r\n    });\r\n    if (numberAnswer === rightAnswer) {\r\n      this.socket.emit(\"memberAnswer\", true);\r\n      alert(\"Bạn trả lời đúng rồi\")\r\n    } else {\r\n      this.socket.emit(\"memberAnswer\", false);\r\n      alert(\"Bạn trả lời sai rồi\")\r\n    }\r\n    if (questions.length > numberQuestion) {\r\n      this.setState({\r\n        numberQuestion\r\n      });\r\n    }\r\n  };\r\n\r\n  clickSubmit = (nickName, pin) => {\r\n    this.socket.emit(\"creatRoom\", 6969);\r\n    this.setState({\r\n      nickName,\r\n      pin\r\n    });\r\n    if (nickName && pin === 6969) {\r\n      this.socket.emit(\"nickName\", nickName);\r\n    }\r\n  };\r\n\r\n  show = () => {\r\n    const {\r\n      questions,\r\n      numberQuestion,\r\n      start,\r\n      pin,\r\n      nickName,\r\n      disableAnswer\r\n    } = this.state;\r\n    if (pin === 6969 && nickName && !start) {\r\n      return <h1>Waiting</h1>;\r\n    } else if (questions && start && pin === 6969) {\r\n      return (\r\n        <div>\r\n          <Question question={questions[numberQuestion].question} />\r\n          <Img />\r\n          <Answer\r\n            answer={questions[numberQuestion].answer}\r\n            clickAnswer={this.clickAnswer}\r\n            disable={disableAnswer}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <EnterPin clickSubmit={this.clickSubmit} />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\" wrapper col-sm-8 col-lg-8 \">{this.show()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class PlayGame extends Component {\r\n  onClick = () => {\r\n    const { clickNext, numberQuestions, numberQuestion } = this.props;\r\n    if (numberQuestion < numberQuestions - 1) clickNext();\r\n  };\r\n\r\n  render() {\r\n    var {\r\n      numberQuestion,\r\n      numberMember,\r\n      numberQuestions,\r\n      question,\r\n      answer,\r\n      numberMemberAnswer,\r\n      members\r\n    } = this.props;\r\n\r\n    var answers = answer.map((a, i) => {\r\n      return (\r\n        <button key={i} className=\"btn btn-secondary col-12 col-sm-5 answer\">\r\n          {a}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    var showMembers = members.map((member, i) => {\r\n      return (\r\n        <tbody key={i}>\r\n          <tr>\r\n            <th scope=\"row\">{(i += 1)}</th>\r\n            <td>{member.nickName}</td>\r\n            <td>{member.rightQuestion}</td>\r\n            <td>{member.score}</td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"playgame row\">\r\n        <div className=\"col-12  col-sm-8 questiongame wrapper\">\r\n          <div className=\"badge badge-danger question\">\r\n            <h2>{question}</h2>\r\n          </div>\r\n          <div className=\"img\"></div>\r\n          <div className=\" row\">{answers}</div>\r\n        </div>\r\n        <div className=\"col-12 col-sm-4 statistic\">\r\n          <h1>\r\n            Câu hỏi số: {(numberQuestion += 1)} / {numberQuestions}\r\n          </h1>\r\n          <h1>\r\n            Số người trả lời:{numberMemberAnswer} /{numberMember}\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary nextquestion\"\r\n            onClick={this.onClick}\r\n          >\r\n            Next question{\" \"}\r\n            <i className=\"fa fa-step-forward\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">STT</th>\r\n                  <th scope=\"col\">Nick Name</th>\r\n                  <th scope=\"col\">Số câu trả lời đúng</th>\r\n                  <th scope=\"col\">Điểm số</th>\r\n                </tr>\r\n              </thead>\r\n              {showMembers}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayGame;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class PreparePlayGame extends Component {\r\n  onClick = () => {\r\n    const { clickStart } = this.props;\r\n    clickStart();\r\n  };\r\n  render() {\r\n    const { numberMember, members } = this.props;\r\n    var showMembers = members.map((member, index) => {\r\n      return (\r\n        <button type=\"button\" key={index} className=\"btn btn-danger member \">\r\n          {member.nickName} <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"prepareplaygame\">\r\n        <p className=\"pin\">PIN:6969</p>\r\n        <div className=\"startgame\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.onClick}\r\n            className=\"btn btn-success\"\r\n          >\r\n            Start Game\r\n          </button>\r\n        </div>\r\n        <div className=\"card boxmembers\">\r\n          <h2 className=\"card-header\">Số lượng thành viên: {numberMember} </h2>\r\n          <div className=\"members\">{showMembers}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreparePlayGame;\r\n","import React, { Component } from \"react\";\r\nimport PlayGame from \"./PlayGame\";\r\nimport PreparePlayGame from \"./PreparePlayGame\";\r\nimport openSocket from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nexport class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      endpoint: \"http://localhost:8000\",\r\n      startPlay: false,\r\n      questions: [],\r\n      numberMember: 0,\r\n      numberMemberAnswer: 0,\r\n      members: [],\r\n      numberQuestion: 1\r\n    };\r\n    this.socket = null;\r\n  }\r\n  componentDidMount() {\r\n    const { startPlay } = this.setState;\r\n    this.start();\r\n    this.socket.emit(\"start\", startPlay);\r\n    this.getData();\r\n  }\r\n  start = () => {\r\n    var options = {\r\n      rememberUpgrade: true,\r\n      transports: [\"websocket\"],\r\n      secure: true,\r\n      rejectUnauthorized: false\r\n    };\r\n\r\n    const { endpoint } = this.state;\r\n    this.socket = openSocket(endpoint, options);\r\n\r\n    this.socket.on(\"Number\", data => {\r\n      this.setState({\r\n        numberMember: data\r\n      });\r\n    });\r\n\r\n    this.socket.on(\"newMember\", data => {\r\n      const { members } = this.state;\r\n      this.setState({\r\n        members: [...members, data]\r\n      });\r\n    });\r\n\r\n    this.socket.on(\"memberAnswer\", data => {\r\n      if (data.isRight) {\r\n        var { members } = this.state;\r\n        const index = members.findIndex(m => m.id === data.id);\r\n\r\n        members[index] = {\r\n          id: members[index].id,\r\n          nickName: members[index].nickName,\r\n          rightQuestion: members[index].rightQuestion + 1,\r\n          score: members[index].score + 100\r\n        };\r\n        members.sort(function(a, b) {\r\n          if (a.score > b.score) {\r\n            return -1;\r\n          }\r\n          if (b.score > a.score) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        this.setState({\r\n          members\r\n        });\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"numberQuestion\", data => {\r\n      this.setState({\r\n        numberQuestion: data\r\n      });\r\n    });\r\n\r\n    this.socket.on(\"numberMemberAnswer\", data => {\r\n      this.setState({\r\n        numberMemberAnswer: data\r\n      });\r\n    });\r\n    this.socket.on(\"memberExit\", data => {\r\n      var { members } = this.state;\r\n      const index = members.findIndex(m => m.id === data.id);\r\n\r\n      members.splice(index, 1);\r\n      this.setState({\r\n        members\r\n      });\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    axios\r\n      .get(`http://localhost:8000/getdata`)\r\n      .then(res => {\r\n        const questions = res.data;\r\n        this.setState({\r\n          questions\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        return 0;\r\n      });\r\n  };\r\n\r\n  clickStart = () => {\r\n    this.socket.emit(\"start\", true);\r\n    this.setState({\r\n      startPlay: true\r\n    });\r\n  };\r\n\r\n  clickNext = () => {\r\n    this.socket.emit(\"next\", 1);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      startPlay,\r\n      questions,\r\n      numberMember,\r\n      members,\r\n      numberQuestion,\r\n      numberMemberAnswer\r\n    } = this.state;\r\n\r\n    if (startPlay) {\r\n      return (\r\n        <PlayGame\r\n          numberQuestion={numberQuestion}\r\n          numberMember={numberMember}\r\n          clickNext={this.clickNext}\r\n          question={questions[numberQuestion].question}\r\n          answer={questions[numberQuestion].answer}\r\n          numberMemberAnswer={numberMemberAnswer}\r\n          numberQuestions={questions.length}\r\n          members={members}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <PreparePlayGame\r\n          clickStart={this.clickStart}\r\n          numberMember={numberMember}\r\n          members={members}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               Không tìm thấy trang\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Box from \"./components/game/Box\";\nimport Game from \"./components/admin/Game\";\nimport NotFound from \"./components/notfound/NotFound\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/nhom1-dacnpm\" exact>\n            <Box />\n          </Route>\n          <Route path=\"/nhom1-dacnpm/playgame\">\n            <Game />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}